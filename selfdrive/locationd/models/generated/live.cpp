#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8958589685007469941) {
   out_8958589685007469941[0] = 0;
   out_8958589685007469941[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8958589685007469941[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8958589685007469941[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8958589685007469941[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8958589685007469941[5] = -sin(in_vec[1]);
   out_8958589685007469941[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8958589685007469941[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8958589685007469941[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8958589685007469941[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8958589685007469941[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8958589685007469941[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8958589685007469941[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8958589685007469941[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8958589685007469941[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8958589685007469941[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8958589685007469941[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8958589685007469941[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3025361583143407068) {
   out_3025361583143407068[0] = delta_x[0] + nom_x[0];
   out_3025361583143407068[1] = delta_x[1] + nom_x[1];
   out_3025361583143407068[2] = delta_x[2] + nom_x[2];
   out_3025361583143407068[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3025361583143407068[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3025361583143407068[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3025361583143407068[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3025361583143407068[7] = delta_x[6] + nom_x[7];
   out_3025361583143407068[8] = delta_x[7] + nom_x[8];
   out_3025361583143407068[9] = delta_x[8] + nom_x[9];
   out_3025361583143407068[10] = delta_x[9] + nom_x[10];
   out_3025361583143407068[11] = delta_x[10] + nom_x[11];
   out_3025361583143407068[12] = delta_x[11] + nom_x[12];
   out_3025361583143407068[13] = delta_x[12] + nom_x[13];
   out_3025361583143407068[14] = delta_x[13] + nom_x[14];
   out_3025361583143407068[15] = delta_x[14] + nom_x[15];
   out_3025361583143407068[16] = delta_x[15] + nom_x[16];
   out_3025361583143407068[17] = delta_x[16] + nom_x[17];
   out_3025361583143407068[18] = delta_x[17] + nom_x[18];
   out_3025361583143407068[19] = delta_x[18] + nom_x[19];
   out_3025361583143407068[20] = delta_x[19] + nom_x[20];
   out_3025361583143407068[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4198850217462499107) {
   out_4198850217462499107[0] = -nom_x[0] + true_x[0];
   out_4198850217462499107[1] = -nom_x[1] + true_x[1];
   out_4198850217462499107[2] = -nom_x[2] + true_x[2];
   out_4198850217462499107[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4198850217462499107[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4198850217462499107[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4198850217462499107[6] = -nom_x[7] + true_x[7];
   out_4198850217462499107[7] = -nom_x[8] + true_x[8];
   out_4198850217462499107[8] = -nom_x[9] + true_x[9];
   out_4198850217462499107[9] = -nom_x[10] + true_x[10];
   out_4198850217462499107[10] = -nom_x[11] + true_x[11];
   out_4198850217462499107[11] = -nom_x[12] + true_x[12];
   out_4198850217462499107[12] = -nom_x[13] + true_x[13];
   out_4198850217462499107[13] = -nom_x[14] + true_x[14];
   out_4198850217462499107[14] = -nom_x[15] + true_x[15];
   out_4198850217462499107[15] = -nom_x[16] + true_x[16];
   out_4198850217462499107[16] = -nom_x[17] + true_x[17];
   out_4198850217462499107[17] = -nom_x[18] + true_x[18];
   out_4198850217462499107[18] = -nom_x[19] + true_x[19];
   out_4198850217462499107[19] = -nom_x[20] + true_x[20];
   out_4198850217462499107[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8679930981745783122) {
   out_8679930981745783122[0] = 1.0;
   out_8679930981745783122[1] = 0;
   out_8679930981745783122[2] = 0;
   out_8679930981745783122[3] = 0;
   out_8679930981745783122[4] = 0;
   out_8679930981745783122[5] = 0;
   out_8679930981745783122[6] = 0;
   out_8679930981745783122[7] = 0;
   out_8679930981745783122[8] = 0;
   out_8679930981745783122[9] = 0;
   out_8679930981745783122[10] = 0;
   out_8679930981745783122[11] = 0;
   out_8679930981745783122[12] = 0;
   out_8679930981745783122[13] = 0;
   out_8679930981745783122[14] = 0;
   out_8679930981745783122[15] = 0;
   out_8679930981745783122[16] = 0;
   out_8679930981745783122[17] = 0;
   out_8679930981745783122[18] = 0;
   out_8679930981745783122[19] = 0;
   out_8679930981745783122[20] = 0;
   out_8679930981745783122[21] = 0;
   out_8679930981745783122[22] = 1.0;
   out_8679930981745783122[23] = 0;
   out_8679930981745783122[24] = 0;
   out_8679930981745783122[25] = 0;
   out_8679930981745783122[26] = 0;
   out_8679930981745783122[27] = 0;
   out_8679930981745783122[28] = 0;
   out_8679930981745783122[29] = 0;
   out_8679930981745783122[30] = 0;
   out_8679930981745783122[31] = 0;
   out_8679930981745783122[32] = 0;
   out_8679930981745783122[33] = 0;
   out_8679930981745783122[34] = 0;
   out_8679930981745783122[35] = 0;
   out_8679930981745783122[36] = 0;
   out_8679930981745783122[37] = 0;
   out_8679930981745783122[38] = 0;
   out_8679930981745783122[39] = 0;
   out_8679930981745783122[40] = 0;
   out_8679930981745783122[41] = 0;
   out_8679930981745783122[42] = 0;
   out_8679930981745783122[43] = 0;
   out_8679930981745783122[44] = 1.0;
   out_8679930981745783122[45] = 0;
   out_8679930981745783122[46] = 0;
   out_8679930981745783122[47] = 0;
   out_8679930981745783122[48] = 0;
   out_8679930981745783122[49] = 0;
   out_8679930981745783122[50] = 0;
   out_8679930981745783122[51] = 0;
   out_8679930981745783122[52] = 0;
   out_8679930981745783122[53] = 0;
   out_8679930981745783122[54] = 0;
   out_8679930981745783122[55] = 0;
   out_8679930981745783122[56] = 0;
   out_8679930981745783122[57] = 0;
   out_8679930981745783122[58] = 0;
   out_8679930981745783122[59] = 0;
   out_8679930981745783122[60] = 0;
   out_8679930981745783122[61] = 0;
   out_8679930981745783122[62] = 0;
   out_8679930981745783122[63] = 0;
   out_8679930981745783122[64] = 0;
   out_8679930981745783122[65] = 0;
   out_8679930981745783122[66] = -0.5*state[4];
   out_8679930981745783122[67] = -0.5*state[5];
   out_8679930981745783122[68] = -0.5*state[6];
   out_8679930981745783122[69] = 0;
   out_8679930981745783122[70] = 0;
   out_8679930981745783122[71] = 0;
   out_8679930981745783122[72] = 0;
   out_8679930981745783122[73] = 0;
   out_8679930981745783122[74] = 0;
   out_8679930981745783122[75] = 0;
   out_8679930981745783122[76] = 0;
   out_8679930981745783122[77] = 0;
   out_8679930981745783122[78] = 0;
   out_8679930981745783122[79] = 0;
   out_8679930981745783122[80] = 0;
   out_8679930981745783122[81] = 0;
   out_8679930981745783122[82] = 0;
   out_8679930981745783122[83] = 0;
   out_8679930981745783122[84] = 0;
   out_8679930981745783122[85] = 0;
   out_8679930981745783122[86] = 0;
   out_8679930981745783122[87] = 0.5*state[3];
   out_8679930981745783122[88] = 0.5*state[6];
   out_8679930981745783122[89] = -0.5*state[5];
   out_8679930981745783122[90] = 0;
   out_8679930981745783122[91] = 0;
   out_8679930981745783122[92] = 0;
   out_8679930981745783122[93] = 0;
   out_8679930981745783122[94] = 0;
   out_8679930981745783122[95] = 0;
   out_8679930981745783122[96] = 0;
   out_8679930981745783122[97] = 0;
   out_8679930981745783122[98] = 0;
   out_8679930981745783122[99] = 0;
   out_8679930981745783122[100] = 0;
   out_8679930981745783122[101] = 0;
   out_8679930981745783122[102] = 0;
   out_8679930981745783122[103] = 0;
   out_8679930981745783122[104] = 0;
   out_8679930981745783122[105] = 0;
   out_8679930981745783122[106] = 0;
   out_8679930981745783122[107] = 0;
   out_8679930981745783122[108] = -0.5*state[6];
   out_8679930981745783122[109] = 0.5*state[3];
   out_8679930981745783122[110] = 0.5*state[4];
   out_8679930981745783122[111] = 0;
   out_8679930981745783122[112] = 0;
   out_8679930981745783122[113] = 0;
   out_8679930981745783122[114] = 0;
   out_8679930981745783122[115] = 0;
   out_8679930981745783122[116] = 0;
   out_8679930981745783122[117] = 0;
   out_8679930981745783122[118] = 0;
   out_8679930981745783122[119] = 0;
   out_8679930981745783122[120] = 0;
   out_8679930981745783122[121] = 0;
   out_8679930981745783122[122] = 0;
   out_8679930981745783122[123] = 0;
   out_8679930981745783122[124] = 0;
   out_8679930981745783122[125] = 0;
   out_8679930981745783122[126] = 0;
   out_8679930981745783122[127] = 0;
   out_8679930981745783122[128] = 0;
   out_8679930981745783122[129] = 0.5*state[5];
   out_8679930981745783122[130] = -0.5*state[4];
   out_8679930981745783122[131] = 0.5*state[3];
   out_8679930981745783122[132] = 0;
   out_8679930981745783122[133] = 0;
   out_8679930981745783122[134] = 0;
   out_8679930981745783122[135] = 0;
   out_8679930981745783122[136] = 0;
   out_8679930981745783122[137] = 0;
   out_8679930981745783122[138] = 0;
   out_8679930981745783122[139] = 0;
   out_8679930981745783122[140] = 0;
   out_8679930981745783122[141] = 0;
   out_8679930981745783122[142] = 0;
   out_8679930981745783122[143] = 0;
   out_8679930981745783122[144] = 0;
   out_8679930981745783122[145] = 0;
   out_8679930981745783122[146] = 0;
   out_8679930981745783122[147] = 0;
   out_8679930981745783122[148] = 0;
   out_8679930981745783122[149] = 0;
   out_8679930981745783122[150] = 0;
   out_8679930981745783122[151] = 0;
   out_8679930981745783122[152] = 0;
   out_8679930981745783122[153] = 1.0;
   out_8679930981745783122[154] = 0;
   out_8679930981745783122[155] = 0;
   out_8679930981745783122[156] = 0;
   out_8679930981745783122[157] = 0;
   out_8679930981745783122[158] = 0;
   out_8679930981745783122[159] = 0;
   out_8679930981745783122[160] = 0;
   out_8679930981745783122[161] = 0;
   out_8679930981745783122[162] = 0;
   out_8679930981745783122[163] = 0;
   out_8679930981745783122[164] = 0;
   out_8679930981745783122[165] = 0;
   out_8679930981745783122[166] = 0;
   out_8679930981745783122[167] = 0;
   out_8679930981745783122[168] = 0;
   out_8679930981745783122[169] = 0;
   out_8679930981745783122[170] = 0;
   out_8679930981745783122[171] = 0;
   out_8679930981745783122[172] = 0;
   out_8679930981745783122[173] = 0;
   out_8679930981745783122[174] = 0;
   out_8679930981745783122[175] = 1.0;
   out_8679930981745783122[176] = 0;
   out_8679930981745783122[177] = 0;
   out_8679930981745783122[178] = 0;
   out_8679930981745783122[179] = 0;
   out_8679930981745783122[180] = 0;
   out_8679930981745783122[181] = 0;
   out_8679930981745783122[182] = 0;
   out_8679930981745783122[183] = 0;
   out_8679930981745783122[184] = 0;
   out_8679930981745783122[185] = 0;
   out_8679930981745783122[186] = 0;
   out_8679930981745783122[187] = 0;
   out_8679930981745783122[188] = 0;
   out_8679930981745783122[189] = 0;
   out_8679930981745783122[190] = 0;
   out_8679930981745783122[191] = 0;
   out_8679930981745783122[192] = 0;
   out_8679930981745783122[193] = 0;
   out_8679930981745783122[194] = 0;
   out_8679930981745783122[195] = 0;
   out_8679930981745783122[196] = 0;
   out_8679930981745783122[197] = 1.0;
   out_8679930981745783122[198] = 0;
   out_8679930981745783122[199] = 0;
   out_8679930981745783122[200] = 0;
   out_8679930981745783122[201] = 0;
   out_8679930981745783122[202] = 0;
   out_8679930981745783122[203] = 0;
   out_8679930981745783122[204] = 0;
   out_8679930981745783122[205] = 0;
   out_8679930981745783122[206] = 0;
   out_8679930981745783122[207] = 0;
   out_8679930981745783122[208] = 0;
   out_8679930981745783122[209] = 0;
   out_8679930981745783122[210] = 0;
   out_8679930981745783122[211] = 0;
   out_8679930981745783122[212] = 0;
   out_8679930981745783122[213] = 0;
   out_8679930981745783122[214] = 0;
   out_8679930981745783122[215] = 0;
   out_8679930981745783122[216] = 0;
   out_8679930981745783122[217] = 0;
   out_8679930981745783122[218] = 0;
   out_8679930981745783122[219] = 1.0;
   out_8679930981745783122[220] = 0;
   out_8679930981745783122[221] = 0;
   out_8679930981745783122[222] = 0;
   out_8679930981745783122[223] = 0;
   out_8679930981745783122[224] = 0;
   out_8679930981745783122[225] = 0;
   out_8679930981745783122[226] = 0;
   out_8679930981745783122[227] = 0;
   out_8679930981745783122[228] = 0;
   out_8679930981745783122[229] = 0;
   out_8679930981745783122[230] = 0;
   out_8679930981745783122[231] = 0;
   out_8679930981745783122[232] = 0;
   out_8679930981745783122[233] = 0;
   out_8679930981745783122[234] = 0;
   out_8679930981745783122[235] = 0;
   out_8679930981745783122[236] = 0;
   out_8679930981745783122[237] = 0;
   out_8679930981745783122[238] = 0;
   out_8679930981745783122[239] = 0;
   out_8679930981745783122[240] = 0;
   out_8679930981745783122[241] = 1.0;
   out_8679930981745783122[242] = 0;
   out_8679930981745783122[243] = 0;
   out_8679930981745783122[244] = 0;
   out_8679930981745783122[245] = 0;
   out_8679930981745783122[246] = 0;
   out_8679930981745783122[247] = 0;
   out_8679930981745783122[248] = 0;
   out_8679930981745783122[249] = 0;
   out_8679930981745783122[250] = 0;
   out_8679930981745783122[251] = 0;
   out_8679930981745783122[252] = 0;
   out_8679930981745783122[253] = 0;
   out_8679930981745783122[254] = 0;
   out_8679930981745783122[255] = 0;
   out_8679930981745783122[256] = 0;
   out_8679930981745783122[257] = 0;
   out_8679930981745783122[258] = 0;
   out_8679930981745783122[259] = 0;
   out_8679930981745783122[260] = 0;
   out_8679930981745783122[261] = 0;
   out_8679930981745783122[262] = 0;
   out_8679930981745783122[263] = 1.0;
   out_8679930981745783122[264] = 0;
   out_8679930981745783122[265] = 0;
   out_8679930981745783122[266] = 0;
   out_8679930981745783122[267] = 0;
   out_8679930981745783122[268] = 0;
   out_8679930981745783122[269] = 0;
   out_8679930981745783122[270] = 0;
   out_8679930981745783122[271] = 0;
   out_8679930981745783122[272] = 0;
   out_8679930981745783122[273] = 0;
   out_8679930981745783122[274] = 0;
   out_8679930981745783122[275] = 0;
   out_8679930981745783122[276] = 0;
   out_8679930981745783122[277] = 0;
   out_8679930981745783122[278] = 0;
   out_8679930981745783122[279] = 0;
   out_8679930981745783122[280] = 0;
   out_8679930981745783122[281] = 0;
   out_8679930981745783122[282] = 0;
   out_8679930981745783122[283] = 0;
   out_8679930981745783122[284] = 0;
   out_8679930981745783122[285] = 1.0;
   out_8679930981745783122[286] = 0;
   out_8679930981745783122[287] = 0;
   out_8679930981745783122[288] = 0;
   out_8679930981745783122[289] = 0;
   out_8679930981745783122[290] = 0;
   out_8679930981745783122[291] = 0;
   out_8679930981745783122[292] = 0;
   out_8679930981745783122[293] = 0;
   out_8679930981745783122[294] = 0;
   out_8679930981745783122[295] = 0;
   out_8679930981745783122[296] = 0;
   out_8679930981745783122[297] = 0;
   out_8679930981745783122[298] = 0;
   out_8679930981745783122[299] = 0;
   out_8679930981745783122[300] = 0;
   out_8679930981745783122[301] = 0;
   out_8679930981745783122[302] = 0;
   out_8679930981745783122[303] = 0;
   out_8679930981745783122[304] = 0;
   out_8679930981745783122[305] = 0;
   out_8679930981745783122[306] = 0;
   out_8679930981745783122[307] = 1.0;
   out_8679930981745783122[308] = 0;
   out_8679930981745783122[309] = 0;
   out_8679930981745783122[310] = 0;
   out_8679930981745783122[311] = 0;
   out_8679930981745783122[312] = 0;
   out_8679930981745783122[313] = 0;
   out_8679930981745783122[314] = 0;
   out_8679930981745783122[315] = 0;
   out_8679930981745783122[316] = 0;
   out_8679930981745783122[317] = 0;
   out_8679930981745783122[318] = 0;
   out_8679930981745783122[319] = 0;
   out_8679930981745783122[320] = 0;
   out_8679930981745783122[321] = 0;
   out_8679930981745783122[322] = 0;
   out_8679930981745783122[323] = 0;
   out_8679930981745783122[324] = 0;
   out_8679930981745783122[325] = 0;
   out_8679930981745783122[326] = 0;
   out_8679930981745783122[327] = 0;
   out_8679930981745783122[328] = 0;
   out_8679930981745783122[329] = 1.0;
   out_8679930981745783122[330] = 0;
   out_8679930981745783122[331] = 0;
   out_8679930981745783122[332] = 0;
   out_8679930981745783122[333] = 0;
   out_8679930981745783122[334] = 0;
   out_8679930981745783122[335] = 0;
   out_8679930981745783122[336] = 0;
   out_8679930981745783122[337] = 0;
   out_8679930981745783122[338] = 0;
   out_8679930981745783122[339] = 0;
   out_8679930981745783122[340] = 0;
   out_8679930981745783122[341] = 0;
   out_8679930981745783122[342] = 0;
   out_8679930981745783122[343] = 0;
   out_8679930981745783122[344] = 0;
   out_8679930981745783122[345] = 0;
   out_8679930981745783122[346] = 0;
   out_8679930981745783122[347] = 0;
   out_8679930981745783122[348] = 0;
   out_8679930981745783122[349] = 0;
   out_8679930981745783122[350] = 0;
   out_8679930981745783122[351] = 1.0;
   out_8679930981745783122[352] = 0;
   out_8679930981745783122[353] = 0;
   out_8679930981745783122[354] = 0;
   out_8679930981745783122[355] = 0;
   out_8679930981745783122[356] = 0;
   out_8679930981745783122[357] = 0;
   out_8679930981745783122[358] = 0;
   out_8679930981745783122[359] = 0;
   out_8679930981745783122[360] = 0;
   out_8679930981745783122[361] = 0;
   out_8679930981745783122[362] = 0;
   out_8679930981745783122[363] = 0;
   out_8679930981745783122[364] = 0;
   out_8679930981745783122[365] = 0;
   out_8679930981745783122[366] = 0;
   out_8679930981745783122[367] = 0;
   out_8679930981745783122[368] = 0;
   out_8679930981745783122[369] = 0;
   out_8679930981745783122[370] = 0;
   out_8679930981745783122[371] = 0;
   out_8679930981745783122[372] = 0;
   out_8679930981745783122[373] = 1.0;
   out_8679930981745783122[374] = 0;
   out_8679930981745783122[375] = 0;
   out_8679930981745783122[376] = 0;
   out_8679930981745783122[377] = 0;
   out_8679930981745783122[378] = 0;
   out_8679930981745783122[379] = 0;
   out_8679930981745783122[380] = 0;
   out_8679930981745783122[381] = 0;
   out_8679930981745783122[382] = 0;
   out_8679930981745783122[383] = 0;
   out_8679930981745783122[384] = 0;
   out_8679930981745783122[385] = 0;
   out_8679930981745783122[386] = 0;
   out_8679930981745783122[387] = 0;
   out_8679930981745783122[388] = 0;
   out_8679930981745783122[389] = 0;
   out_8679930981745783122[390] = 0;
   out_8679930981745783122[391] = 0;
   out_8679930981745783122[392] = 0;
   out_8679930981745783122[393] = 0;
   out_8679930981745783122[394] = 0;
   out_8679930981745783122[395] = 1.0;
   out_8679930981745783122[396] = 0;
   out_8679930981745783122[397] = 0;
   out_8679930981745783122[398] = 0;
   out_8679930981745783122[399] = 0;
   out_8679930981745783122[400] = 0;
   out_8679930981745783122[401] = 0;
   out_8679930981745783122[402] = 0;
   out_8679930981745783122[403] = 0;
   out_8679930981745783122[404] = 0;
   out_8679930981745783122[405] = 0;
   out_8679930981745783122[406] = 0;
   out_8679930981745783122[407] = 0;
   out_8679930981745783122[408] = 0;
   out_8679930981745783122[409] = 0;
   out_8679930981745783122[410] = 0;
   out_8679930981745783122[411] = 0;
   out_8679930981745783122[412] = 0;
   out_8679930981745783122[413] = 0;
   out_8679930981745783122[414] = 0;
   out_8679930981745783122[415] = 0;
   out_8679930981745783122[416] = 0;
   out_8679930981745783122[417] = 1.0;
   out_8679930981745783122[418] = 0;
   out_8679930981745783122[419] = 0;
   out_8679930981745783122[420] = 0;
   out_8679930981745783122[421] = 0;
   out_8679930981745783122[422] = 0;
   out_8679930981745783122[423] = 0;
   out_8679930981745783122[424] = 0;
   out_8679930981745783122[425] = 0;
   out_8679930981745783122[426] = 0;
   out_8679930981745783122[427] = 0;
   out_8679930981745783122[428] = 0;
   out_8679930981745783122[429] = 0;
   out_8679930981745783122[430] = 0;
   out_8679930981745783122[431] = 0;
   out_8679930981745783122[432] = 0;
   out_8679930981745783122[433] = 0;
   out_8679930981745783122[434] = 0;
   out_8679930981745783122[435] = 0;
   out_8679930981745783122[436] = 0;
   out_8679930981745783122[437] = 0;
   out_8679930981745783122[438] = 0;
   out_8679930981745783122[439] = 1.0;
   out_8679930981745783122[440] = 0;
   out_8679930981745783122[441] = 0;
   out_8679930981745783122[442] = 0;
   out_8679930981745783122[443] = 0;
   out_8679930981745783122[444] = 0;
   out_8679930981745783122[445] = 0;
   out_8679930981745783122[446] = 0;
   out_8679930981745783122[447] = 0;
   out_8679930981745783122[448] = 0;
   out_8679930981745783122[449] = 0;
   out_8679930981745783122[450] = 0;
   out_8679930981745783122[451] = 0;
   out_8679930981745783122[452] = 0;
   out_8679930981745783122[453] = 0;
   out_8679930981745783122[454] = 0;
   out_8679930981745783122[455] = 0;
   out_8679930981745783122[456] = 0;
   out_8679930981745783122[457] = 0;
   out_8679930981745783122[458] = 0;
   out_8679930981745783122[459] = 0;
   out_8679930981745783122[460] = 0;
   out_8679930981745783122[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3683900094095511410) {
   out_3683900094095511410[0] = dt*state[7] + state[0];
   out_3683900094095511410[1] = dt*state[8] + state[1];
   out_3683900094095511410[2] = dt*state[9] + state[2];
   out_3683900094095511410[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3683900094095511410[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3683900094095511410[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3683900094095511410[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3683900094095511410[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3683900094095511410[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3683900094095511410[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3683900094095511410[10] = state[10];
   out_3683900094095511410[11] = state[11];
   out_3683900094095511410[12] = state[12];
   out_3683900094095511410[13] = state[13];
   out_3683900094095511410[14] = state[14];
   out_3683900094095511410[15] = state[15];
   out_3683900094095511410[16] = state[16];
   out_3683900094095511410[17] = state[17];
   out_3683900094095511410[18] = state[18];
   out_3683900094095511410[19] = state[19];
   out_3683900094095511410[20] = state[20];
   out_3683900094095511410[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5388026379385406588) {
   out_5388026379385406588[0] = 1;
   out_5388026379385406588[1] = 0;
   out_5388026379385406588[2] = 0;
   out_5388026379385406588[3] = 0;
   out_5388026379385406588[4] = 0;
   out_5388026379385406588[5] = 0;
   out_5388026379385406588[6] = dt;
   out_5388026379385406588[7] = 0;
   out_5388026379385406588[8] = 0;
   out_5388026379385406588[9] = 0;
   out_5388026379385406588[10] = 0;
   out_5388026379385406588[11] = 0;
   out_5388026379385406588[12] = 0;
   out_5388026379385406588[13] = 0;
   out_5388026379385406588[14] = 0;
   out_5388026379385406588[15] = 0;
   out_5388026379385406588[16] = 0;
   out_5388026379385406588[17] = 0;
   out_5388026379385406588[18] = 0;
   out_5388026379385406588[19] = 0;
   out_5388026379385406588[20] = 0;
   out_5388026379385406588[21] = 0;
   out_5388026379385406588[22] = 1;
   out_5388026379385406588[23] = 0;
   out_5388026379385406588[24] = 0;
   out_5388026379385406588[25] = 0;
   out_5388026379385406588[26] = 0;
   out_5388026379385406588[27] = 0;
   out_5388026379385406588[28] = dt;
   out_5388026379385406588[29] = 0;
   out_5388026379385406588[30] = 0;
   out_5388026379385406588[31] = 0;
   out_5388026379385406588[32] = 0;
   out_5388026379385406588[33] = 0;
   out_5388026379385406588[34] = 0;
   out_5388026379385406588[35] = 0;
   out_5388026379385406588[36] = 0;
   out_5388026379385406588[37] = 0;
   out_5388026379385406588[38] = 0;
   out_5388026379385406588[39] = 0;
   out_5388026379385406588[40] = 0;
   out_5388026379385406588[41] = 0;
   out_5388026379385406588[42] = 0;
   out_5388026379385406588[43] = 0;
   out_5388026379385406588[44] = 1;
   out_5388026379385406588[45] = 0;
   out_5388026379385406588[46] = 0;
   out_5388026379385406588[47] = 0;
   out_5388026379385406588[48] = 0;
   out_5388026379385406588[49] = 0;
   out_5388026379385406588[50] = dt;
   out_5388026379385406588[51] = 0;
   out_5388026379385406588[52] = 0;
   out_5388026379385406588[53] = 0;
   out_5388026379385406588[54] = 0;
   out_5388026379385406588[55] = 0;
   out_5388026379385406588[56] = 0;
   out_5388026379385406588[57] = 0;
   out_5388026379385406588[58] = 0;
   out_5388026379385406588[59] = 0;
   out_5388026379385406588[60] = 0;
   out_5388026379385406588[61] = 0;
   out_5388026379385406588[62] = 0;
   out_5388026379385406588[63] = 0;
   out_5388026379385406588[64] = 0;
   out_5388026379385406588[65] = 0;
   out_5388026379385406588[66] = 1;
   out_5388026379385406588[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5388026379385406588[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5388026379385406588[69] = 0;
   out_5388026379385406588[70] = 0;
   out_5388026379385406588[71] = 0;
   out_5388026379385406588[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5388026379385406588[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5388026379385406588[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5388026379385406588[75] = 0;
   out_5388026379385406588[76] = 0;
   out_5388026379385406588[77] = 0;
   out_5388026379385406588[78] = 0;
   out_5388026379385406588[79] = 0;
   out_5388026379385406588[80] = 0;
   out_5388026379385406588[81] = 0;
   out_5388026379385406588[82] = 0;
   out_5388026379385406588[83] = 0;
   out_5388026379385406588[84] = 0;
   out_5388026379385406588[85] = 0;
   out_5388026379385406588[86] = 0;
   out_5388026379385406588[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5388026379385406588[88] = 1;
   out_5388026379385406588[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5388026379385406588[90] = 0;
   out_5388026379385406588[91] = 0;
   out_5388026379385406588[92] = 0;
   out_5388026379385406588[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5388026379385406588[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5388026379385406588[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5388026379385406588[96] = 0;
   out_5388026379385406588[97] = 0;
   out_5388026379385406588[98] = 0;
   out_5388026379385406588[99] = 0;
   out_5388026379385406588[100] = 0;
   out_5388026379385406588[101] = 0;
   out_5388026379385406588[102] = 0;
   out_5388026379385406588[103] = 0;
   out_5388026379385406588[104] = 0;
   out_5388026379385406588[105] = 0;
   out_5388026379385406588[106] = 0;
   out_5388026379385406588[107] = 0;
   out_5388026379385406588[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5388026379385406588[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5388026379385406588[110] = 1;
   out_5388026379385406588[111] = 0;
   out_5388026379385406588[112] = 0;
   out_5388026379385406588[113] = 0;
   out_5388026379385406588[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5388026379385406588[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5388026379385406588[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5388026379385406588[117] = 0;
   out_5388026379385406588[118] = 0;
   out_5388026379385406588[119] = 0;
   out_5388026379385406588[120] = 0;
   out_5388026379385406588[121] = 0;
   out_5388026379385406588[122] = 0;
   out_5388026379385406588[123] = 0;
   out_5388026379385406588[124] = 0;
   out_5388026379385406588[125] = 0;
   out_5388026379385406588[126] = 0;
   out_5388026379385406588[127] = 0;
   out_5388026379385406588[128] = 0;
   out_5388026379385406588[129] = 0;
   out_5388026379385406588[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5388026379385406588[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5388026379385406588[132] = 1;
   out_5388026379385406588[133] = 0;
   out_5388026379385406588[134] = 0;
   out_5388026379385406588[135] = 0;
   out_5388026379385406588[136] = 0;
   out_5388026379385406588[137] = 0;
   out_5388026379385406588[138] = 0;
   out_5388026379385406588[139] = 0;
   out_5388026379385406588[140] = 0;
   out_5388026379385406588[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5388026379385406588[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5388026379385406588[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5388026379385406588[144] = 0;
   out_5388026379385406588[145] = 0;
   out_5388026379385406588[146] = 0;
   out_5388026379385406588[147] = 0;
   out_5388026379385406588[148] = 0;
   out_5388026379385406588[149] = 0;
   out_5388026379385406588[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5388026379385406588[151] = 0;
   out_5388026379385406588[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5388026379385406588[153] = 0;
   out_5388026379385406588[154] = 1;
   out_5388026379385406588[155] = 0;
   out_5388026379385406588[156] = 0;
   out_5388026379385406588[157] = 0;
   out_5388026379385406588[158] = 0;
   out_5388026379385406588[159] = 0;
   out_5388026379385406588[160] = 0;
   out_5388026379385406588[161] = 0;
   out_5388026379385406588[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5388026379385406588[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5388026379385406588[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5388026379385406588[165] = 0;
   out_5388026379385406588[166] = 0;
   out_5388026379385406588[167] = 0;
   out_5388026379385406588[168] = 0;
   out_5388026379385406588[169] = 0;
   out_5388026379385406588[170] = 0;
   out_5388026379385406588[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5388026379385406588[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5388026379385406588[173] = 0;
   out_5388026379385406588[174] = 0;
   out_5388026379385406588[175] = 0;
   out_5388026379385406588[176] = 1;
   out_5388026379385406588[177] = 0;
   out_5388026379385406588[178] = 0;
   out_5388026379385406588[179] = 0;
   out_5388026379385406588[180] = 0;
   out_5388026379385406588[181] = 0;
   out_5388026379385406588[182] = 0;
   out_5388026379385406588[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5388026379385406588[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5388026379385406588[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5388026379385406588[186] = 0;
   out_5388026379385406588[187] = 0;
   out_5388026379385406588[188] = 0;
   out_5388026379385406588[189] = 0;
   out_5388026379385406588[190] = 0;
   out_5388026379385406588[191] = 0;
   out_5388026379385406588[192] = 0;
   out_5388026379385406588[193] = 0;
   out_5388026379385406588[194] = 0;
   out_5388026379385406588[195] = 0;
   out_5388026379385406588[196] = 0;
   out_5388026379385406588[197] = 0;
   out_5388026379385406588[198] = 1;
   out_5388026379385406588[199] = 0;
   out_5388026379385406588[200] = 0;
   out_5388026379385406588[201] = 0;
   out_5388026379385406588[202] = 0;
   out_5388026379385406588[203] = 0;
   out_5388026379385406588[204] = 0;
   out_5388026379385406588[205] = 0;
   out_5388026379385406588[206] = 0;
   out_5388026379385406588[207] = 0;
   out_5388026379385406588[208] = 0;
   out_5388026379385406588[209] = 0;
   out_5388026379385406588[210] = 0;
   out_5388026379385406588[211] = 0;
   out_5388026379385406588[212] = 0;
   out_5388026379385406588[213] = 0;
   out_5388026379385406588[214] = 0;
   out_5388026379385406588[215] = 0;
   out_5388026379385406588[216] = 0;
   out_5388026379385406588[217] = 0;
   out_5388026379385406588[218] = 0;
   out_5388026379385406588[219] = 0;
   out_5388026379385406588[220] = 1;
   out_5388026379385406588[221] = 0;
   out_5388026379385406588[222] = 0;
   out_5388026379385406588[223] = 0;
   out_5388026379385406588[224] = 0;
   out_5388026379385406588[225] = 0;
   out_5388026379385406588[226] = 0;
   out_5388026379385406588[227] = 0;
   out_5388026379385406588[228] = 0;
   out_5388026379385406588[229] = 0;
   out_5388026379385406588[230] = 0;
   out_5388026379385406588[231] = 0;
   out_5388026379385406588[232] = 0;
   out_5388026379385406588[233] = 0;
   out_5388026379385406588[234] = 0;
   out_5388026379385406588[235] = 0;
   out_5388026379385406588[236] = 0;
   out_5388026379385406588[237] = 0;
   out_5388026379385406588[238] = 0;
   out_5388026379385406588[239] = 0;
   out_5388026379385406588[240] = 0;
   out_5388026379385406588[241] = 0;
   out_5388026379385406588[242] = 1;
   out_5388026379385406588[243] = 0;
   out_5388026379385406588[244] = 0;
   out_5388026379385406588[245] = 0;
   out_5388026379385406588[246] = 0;
   out_5388026379385406588[247] = 0;
   out_5388026379385406588[248] = 0;
   out_5388026379385406588[249] = 0;
   out_5388026379385406588[250] = 0;
   out_5388026379385406588[251] = 0;
   out_5388026379385406588[252] = 0;
   out_5388026379385406588[253] = 0;
   out_5388026379385406588[254] = 0;
   out_5388026379385406588[255] = 0;
   out_5388026379385406588[256] = 0;
   out_5388026379385406588[257] = 0;
   out_5388026379385406588[258] = 0;
   out_5388026379385406588[259] = 0;
   out_5388026379385406588[260] = 0;
   out_5388026379385406588[261] = 0;
   out_5388026379385406588[262] = 0;
   out_5388026379385406588[263] = 0;
   out_5388026379385406588[264] = 1;
   out_5388026379385406588[265] = 0;
   out_5388026379385406588[266] = 0;
   out_5388026379385406588[267] = 0;
   out_5388026379385406588[268] = 0;
   out_5388026379385406588[269] = 0;
   out_5388026379385406588[270] = 0;
   out_5388026379385406588[271] = 0;
   out_5388026379385406588[272] = 0;
   out_5388026379385406588[273] = 0;
   out_5388026379385406588[274] = 0;
   out_5388026379385406588[275] = 0;
   out_5388026379385406588[276] = 0;
   out_5388026379385406588[277] = 0;
   out_5388026379385406588[278] = 0;
   out_5388026379385406588[279] = 0;
   out_5388026379385406588[280] = 0;
   out_5388026379385406588[281] = 0;
   out_5388026379385406588[282] = 0;
   out_5388026379385406588[283] = 0;
   out_5388026379385406588[284] = 0;
   out_5388026379385406588[285] = 0;
   out_5388026379385406588[286] = 1;
   out_5388026379385406588[287] = 0;
   out_5388026379385406588[288] = 0;
   out_5388026379385406588[289] = 0;
   out_5388026379385406588[290] = 0;
   out_5388026379385406588[291] = 0;
   out_5388026379385406588[292] = 0;
   out_5388026379385406588[293] = 0;
   out_5388026379385406588[294] = 0;
   out_5388026379385406588[295] = 0;
   out_5388026379385406588[296] = 0;
   out_5388026379385406588[297] = 0;
   out_5388026379385406588[298] = 0;
   out_5388026379385406588[299] = 0;
   out_5388026379385406588[300] = 0;
   out_5388026379385406588[301] = 0;
   out_5388026379385406588[302] = 0;
   out_5388026379385406588[303] = 0;
   out_5388026379385406588[304] = 0;
   out_5388026379385406588[305] = 0;
   out_5388026379385406588[306] = 0;
   out_5388026379385406588[307] = 0;
   out_5388026379385406588[308] = 1;
   out_5388026379385406588[309] = 0;
   out_5388026379385406588[310] = 0;
   out_5388026379385406588[311] = 0;
   out_5388026379385406588[312] = 0;
   out_5388026379385406588[313] = 0;
   out_5388026379385406588[314] = 0;
   out_5388026379385406588[315] = 0;
   out_5388026379385406588[316] = 0;
   out_5388026379385406588[317] = 0;
   out_5388026379385406588[318] = 0;
   out_5388026379385406588[319] = 0;
   out_5388026379385406588[320] = 0;
   out_5388026379385406588[321] = 0;
   out_5388026379385406588[322] = 0;
   out_5388026379385406588[323] = 0;
   out_5388026379385406588[324] = 0;
   out_5388026379385406588[325] = 0;
   out_5388026379385406588[326] = 0;
   out_5388026379385406588[327] = 0;
   out_5388026379385406588[328] = 0;
   out_5388026379385406588[329] = 0;
   out_5388026379385406588[330] = 1;
   out_5388026379385406588[331] = 0;
   out_5388026379385406588[332] = 0;
   out_5388026379385406588[333] = 0;
   out_5388026379385406588[334] = 0;
   out_5388026379385406588[335] = 0;
   out_5388026379385406588[336] = 0;
   out_5388026379385406588[337] = 0;
   out_5388026379385406588[338] = 0;
   out_5388026379385406588[339] = 0;
   out_5388026379385406588[340] = 0;
   out_5388026379385406588[341] = 0;
   out_5388026379385406588[342] = 0;
   out_5388026379385406588[343] = 0;
   out_5388026379385406588[344] = 0;
   out_5388026379385406588[345] = 0;
   out_5388026379385406588[346] = 0;
   out_5388026379385406588[347] = 0;
   out_5388026379385406588[348] = 0;
   out_5388026379385406588[349] = 0;
   out_5388026379385406588[350] = 0;
   out_5388026379385406588[351] = 0;
   out_5388026379385406588[352] = 1;
   out_5388026379385406588[353] = 0;
   out_5388026379385406588[354] = 0;
   out_5388026379385406588[355] = 0;
   out_5388026379385406588[356] = 0;
   out_5388026379385406588[357] = 0;
   out_5388026379385406588[358] = 0;
   out_5388026379385406588[359] = 0;
   out_5388026379385406588[360] = 0;
   out_5388026379385406588[361] = 0;
   out_5388026379385406588[362] = 0;
   out_5388026379385406588[363] = 0;
   out_5388026379385406588[364] = 0;
   out_5388026379385406588[365] = 0;
   out_5388026379385406588[366] = 0;
   out_5388026379385406588[367] = 0;
   out_5388026379385406588[368] = 0;
   out_5388026379385406588[369] = 0;
   out_5388026379385406588[370] = 0;
   out_5388026379385406588[371] = 0;
   out_5388026379385406588[372] = 0;
   out_5388026379385406588[373] = 0;
   out_5388026379385406588[374] = 1;
   out_5388026379385406588[375] = 0;
   out_5388026379385406588[376] = 0;
   out_5388026379385406588[377] = 0;
   out_5388026379385406588[378] = 0;
   out_5388026379385406588[379] = 0;
   out_5388026379385406588[380] = 0;
   out_5388026379385406588[381] = 0;
   out_5388026379385406588[382] = 0;
   out_5388026379385406588[383] = 0;
   out_5388026379385406588[384] = 0;
   out_5388026379385406588[385] = 0;
   out_5388026379385406588[386] = 0;
   out_5388026379385406588[387] = 0;
   out_5388026379385406588[388] = 0;
   out_5388026379385406588[389] = 0;
   out_5388026379385406588[390] = 0;
   out_5388026379385406588[391] = 0;
   out_5388026379385406588[392] = 0;
   out_5388026379385406588[393] = 0;
   out_5388026379385406588[394] = 0;
   out_5388026379385406588[395] = 0;
   out_5388026379385406588[396] = 1;
   out_5388026379385406588[397] = 0;
   out_5388026379385406588[398] = 0;
   out_5388026379385406588[399] = 0;
   out_5388026379385406588[400] = 0;
   out_5388026379385406588[401] = 0;
   out_5388026379385406588[402] = 0;
   out_5388026379385406588[403] = 0;
   out_5388026379385406588[404] = 0;
   out_5388026379385406588[405] = 0;
   out_5388026379385406588[406] = 0;
   out_5388026379385406588[407] = 0;
   out_5388026379385406588[408] = 0;
   out_5388026379385406588[409] = 0;
   out_5388026379385406588[410] = 0;
   out_5388026379385406588[411] = 0;
   out_5388026379385406588[412] = 0;
   out_5388026379385406588[413] = 0;
   out_5388026379385406588[414] = 0;
   out_5388026379385406588[415] = 0;
   out_5388026379385406588[416] = 0;
   out_5388026379385406588[417] = 0;
   out_5388026379385406588[418] = 1;
   out_5388026379385406588[419] = 0;
   out_5388026379385406588[420] = 0;
   out_5388026379385406588[421] = 0;
   out_5388026379385406588[422] = 0;
   out_5388026379385406588[423] = 0;
   out_5388026379385406588[424] = 0;
   out_5388026379385406588[425] = 0;
   out_5388026379385406588[426] = 0;
   out_5388026379385406588[427] = 0;
   out_5388026379385406588[428] = 0;
   out_5388026379385406588[429] = 0;
   out_5388026379385406588[430] = 0;
   out_5388026379385406588[431] = 0;
   out_5388026379385406588[432] = 0;
   out_5388026379385406588[433] = 0;
   out_5388026379385406588[434] = 0;
   out_5388026379385406588[435] = 0;
   out_5388026379385406588[436] = 0;
   out_5388026379385406588[437] = 0;
   out_5388026379385406588[438] = 0;
   out_5388026379385406588[439] = 0;
   out_5388026379385406588[440] = 1;
}
void h_4(double *state, double *unused, double *out_1715536465522411978) {
   out_1715536465522411978[0] = state[10] + state[13];
   out_1715536465522411978[1] = state[11] + state[14];
   out_1715536465522411978[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3719156232158759943) {
   out_3719156232158759943[0] = 0;
   out_3719156232158759943[1] = 0;
   out_3719156232158759943[2] = 0;
   out_3719156232158759943[3] = 0;
   out_3719156232158759943[4] = 0;
   out_3719156232158759943[5] = 0;
   out_3719156232158759943[6] = 0;
   out_3719156232158759943[7] = 0;
   out_3719156232158759943[8] = 0;
   out_3719156232158759943[9] = 0;
   out_3719156232158759943[10] = 1;
   out_3719156232158759943[11] = 0;
   out_3719156232158759943[12] = 0;
   out_3719156232158759943[13] = 1;
   out_3719156232158759943[14] = 0;
   out_3719156232158759943[15] = 0;
   out_3719156232158759943[16] = 0;
   out_3719156232158759943[17] = 0;
   out_3719156232158759943[18] = 0;
   out_3719156232158759943[19] = 0;
   out_3719156232158759943[20] = 0;
   out_3719156232158759943[21] = 0;
   out_3719156232158759943[22] = 0;
   out_3719156232158759943[23] = 0;
   out_3719156232158759943[24] = 0;
   out_3719156232158759943[25] = 0;
   out_3719156232158759943[26] = 0;
   out_3719156232158759943[27] = 0;
   out_3719156232158759943[28] = 0;
   out_3719156232158759943[29] = 0;
   out_3719156232158759943[30] = 0;
   out_3719156232158759943[31] = 0;
   out_3719156232158759943[32] = 0;
   out_3719156232158759943[33] = 1;
   out_3719156232158759943[34] = 0;
   out_3719156232158759943[35] = 0;
   out_3719156232158759943[36] = 1;
   out_3719156232158759943[37] = 0;
   out_3719156232158759943[38] = 0;
   out_3719156232158759943[39] = 0;
   out_3719156232158759943[40] = 0;
   out_3719156232158759943[41] = 0;
   out_3719156232158759943[42] = 0;
   out_3719156232158759943[43] = 0;
   out_3719156232158759943[44] = 0;
   out_3719156232158759943[45] = 0;
   out_3719156232158759943[46] = 0;
   out_3719156232158759943[47] = 0;
   out_3719156232158759943[48] = 0;
   out_3719156232158759943[49] = 0;
   out_3719156232158759943[50] = 0;
   out_3719156232158759943[51] = 0;
   out_3719156232158759943[52] = 0;
   out_3719156232158759943[53] = 0;
   out_3719156232158759943[54] = 0;
   out_3719156232158759943[55] = 0;
   out_3719156232158759943[56] = 1;
   out_3719156232158759943[57] = 0;
   out_3719156232158759943[58] = 0;
   out_3719156232158759943[59] = 1;
   out_3719156232158759943[60] = 0;
   out_3719156232158759943[61] = 0;
   out_3719156232158759943[62] = 0;
   out_3719156232158759943[63] = 0;
   out_3719156232158759943[64] = 0;
   out_3719156232158759943[65] = 0;
}
void h_9(double *state, double *unused, double *out_975100759360487818) {
   out_975100759360487818[0] = state[10];
   out_975100759360487818[1] = state[11];
   out_975100759360487818[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3568062703105687527) {
   out_3568062703105687527[0] = 0;
   out_3568062703105687527[1] = 0;
   out_3568062703105687527[2] = 0;
   out_3568062703105687527[3] = 0;
   out_3568062703105687527[4] = 0;
   out_3568062703105687527[5] = 0;
   out_3568062703105687527[6] = 0;
   out_3568062703105687527[7] = 0;
   out_3568062703105687527[8] = 0;
   out_3568062703105687527[9] = 0;
   out_3568062703105687527[10] = 1;
   out_3568062703105687527[11] = 0;
   out_3568062703105687527[12] = 0;
   out_3568062703105687527[13] = 0;
   out_3568062703105687527[14] = 0;
   out_3568062703105687527[15] = 0;
   out_3568062703105687527[16] = 0;
   out_3568062703105687527[17] = 0;
   out_3568062703105687527[18] = 0;
   out_3568062703105687527[19] = 0;
   out_3568062703105687527[20] = 0;
   out_3568062703105687527[21] = 0;
   out_3568062703105687527[22] = 0;
   out_3568062703105687527[23] = 0;
   out_3568062703105687527[24] = 0;
   out_3568062703105687527[25] = 0;
   out_3568062703105687527[26] = 0;
   out_3568062703105687527[27] = 0;
   out_3568062703105687527[28] = 0;
   out_3568062703105687527[29] = 0;
   out_3568062703105687527[30] = 0;
   out_3568062703105687527[31] = 0;
   out_3568062703105687527[32] = 0;
   out_3568062703105687527[33] = 1;
   out_3568062703105687527[34] = 0;
   out_3568062703105687527[35] = 0;
   out_3568062703105687527[36] = 0;
   out_3568062703105687527[37] = 0;
   out_3568062703105687527[38] = 0;
   out_3568062703105687527[39] = 0;
   out_3568062703105687527[40] = 0;
   out_3568062703105687527[41] = 0;
   out_3568062703105687527[42] = 0;
   out_3568062703105687527[43] = 0;
   out_3568062703105687527[44] = 0;
   out_3568062703105687527[45] = 0;
   out_3568062703105687527[46] = 0;
   out_3568062703105687527[47] = 0;
   out_3568062703105687527[48] = 0;
   out_3568062703105687527[49] = 0;
   out_3568062703105687527[50] = 0;
   out_3568062703105687527[51] = 0;
   out_3568062703105687527[52] = 0;
   out_3568062703105687527[53] = 0;
   out_3568062703105687527[54] = 0;
   out_3568062703105687527[55] = 0;
   out_3568062703105687527[56] = 1;
   out_3568062703105687527[57] = 0;
   out_3568062703105687527[58] = 0;
   out_3568062703105687527[59] = 0;
   out_3568062703105687527[60] = 0;
   out_3568062703105687527[61] = 0;
   out_3568062703105687527[62] = 0;
   out_3568062703105687527[63] = 0;
   out_3568062703105687527[64] = 0;
   out_3568062703105687527[65] = 0;
}
void h_10(double *state, double *unused, double *out_2896629913052241188) {
   out_2896629913052241188[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2896629913052241188[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2896629913052241188[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7733782407281295071) {
   out_7733782407281295071[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7733782407281295071[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7733782407281295071[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7733782407281295071[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7733782407281295071[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7733782407281295071[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7733782407281295071[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7733782407281295071[7] = 0;
   out_7733782407281295071[8] = 0;
   out_7733782407281295071[9] = 0;
   out_7733782407281295071[10] = 0;
   out_7733782407281295071[11] = 0;
   out_7733782407281295071[12] = 0;
   out_7733782407281295071[13] = 0;
   out_7733782407281295071[14] = 0;
   out_7733782407281295071[15] = 0;
   out_7733782407281295071[16] = 1;
   out_7733782407281295071[17] = 0;
   out_7733782407281295071[18] = 0;
   out_7733782407281295071[19] = 1;
   out_7733782407281295071[20] = 0;
   out_7733782407281295071[21] = 0;
   out_7733782407281295071[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7733782407281295071[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7733782407281295071[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7733782407281295071[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7733782407281295071[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7733782407281295071[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7733782407281295071[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7733782407281295071[29] = 0;
   out_7733782407281295071[30] = 0;
   out_7733782407281295071[31] = 0;
   out_7733782407281295071[32] = 0;
   out_7733782407281295071[33] = 0;
   out_7733782407281295071[34] = 0;
   out_7733782407281295071[35] = 0;
   out_7733782407281295071[36] = 0;
   out_7733782407281295071[37] = 0;
   out_7733782407281295071[38] = 0;
   out_7733782407281295071[39] = 1;
   out_7733782407281295071[40] = 0;
   out_7733782407281295071[41] = 0;
   out_7733782407281295071[42] = 1;
   out_7733782407281295071[43] = 0;
   out_7733782407281295071[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7733782407281295071[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7733782407281295071[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7733782407281295071[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7733782407281295071[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7733782407281295071[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7733782407281295071[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7733782407281295071[51] = 0;
   out_7733782407281295071[52] = 0;
   out_7733782407281295071[53] = 0;
   out_7733782407281295071[54] = 0;
   out_7733782407281295071[55] = 0;
   out_7733782407281295071[56] = 0;
   out_7733782407281295071[57] = 0;
   out_7733782407281295071[58] = 0;
   out_7733782407281295071[59] = 0;
   out_7733782407281295071[60] = 0;
   out_7733782407281295071[61] = 0;
   out_7733782407281295071[62] = 1;
   out_7733782407281295071[63] = 0;
   out_7733782407281295071[64] = 0;
   out_7733782407281295071[65] = 1;
}
void h_12(double *state, double *unused, double *out_1790768434786706157) {
   out_1790768434786706157[0] = state[0];
   out_1790768434786706157[1] = state[1];
   out_1790768434786706157[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1300300175873201852) {
   out_1300300175873201852[0] = 1;
   out_1300300175873201852[1] = 0;
   out_1300300175873201852[2] = 0;
   out_1300300175873201852[3] = 0;
   out_1300300175873201852[4] = 0;
   out_1300300175873201852[5] = 0;
   out_1300300175873201852[6] = 0;
   out_1300300175873201852[7] = 0;
   out_1300300175873201852[8] = 0;
   out_1300300175873201852[9] = 0;
   out_1300300175873201852[10] = 0;
   out_1300300175873201852[11] = 0;
   out_1300300175873201852[12] = 0;
   out_1300300175873201852[13] = 0;
   out_1300300175873201852[14] = 0;
   out_1300300175873201852[15] = 0;
   out_1300300175873201852[16] = 0;
   out_1300300175873201852[17] = 0;
   out_1300300175873201852[18] = 0;
   out_1300300175873201852[19] = 0;
   out_1300300175873201852[20] = 0;
   out_1300300175873201852[21] = 0;
   out_1300300175873201852[22] = 0;
   out_1300300175873201852[23] = 1;
   out_1300300175873201852[24] = 0;
   out_1300300175873201852[25] = 0;
   out_1300300175873201852[26] = 0;
   out_1300300175873201852[27] = 0;
   out_1300300175873201852[28] = 0;
   out_1300300175873201852[29] = 0;
   out_1300300175873201852[30] = 0;
   out_1300300175873201852[31] = 0;
   out_1300300175873201852[32] = 0;
   out_1300300175873201852[33] = 0;
   out_1300300175873201852[34] = 0;
   out_1300300175873201852[35] = 0;
   out_1300300175873201852[36] = 0;
   out_1300300175873201852[37] = 0;
   out_1300300175873201852[38] = 0;
   out_1300300175873201852[39] = 0;
   out_1300300175873201852[40] = 0;
   out_1300300175873201852[41] = 0;
   out_1300300175873201852[42] = 0;
   out_1300300175873201852[43] = 0;
   out_1300300175873201852[44] = 0;
   out_1300300175873201852[45] = 0;
   out_1300300175873201852[46] = 1;
   out_1300300175873201852[47] = 0;
   out_1300300175873201852[48] = 0;
   out_1300300175873201852[49] = 0;
   out_1300300175873201852[50] = 0;
   out_1300300175873201852[51] = 0;
   out_1300300175873201852[52] = 0;
   out_1300300175873201852[53] = 0;
   out_1300300175873201852[54] = 0;
   out_1300300175873201852[55] = 0;
   out_1300300175873201852[56] = 0;
   out_1300300175873201852[57] = 0;
   out_1300300175873201852[58] = 0;
   out_1300300175873201852[59] = 0;
   out_1300300175873201852[60] = 0;
   out_1300300175873201852[61] = 0;
   out_1300300175873201852[62] = 0;
   out_1300300175873201852[63] = 0;
   out_1300300175873201852[64] = 0;
   out_1300300175873201852[65] = 0;
}
void h_31(double *state, double *unused, double *out_5470712750729101726) {
   out_5470712750729101726[0] = state[7];
   out_5470712750729101726[1] = state[8];
   out_5470712750729101726[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4045863208198215561) {
   out_4045863208198215561[0] = 0;
   out_4045863208198215561[1] = 0;
   out_4045863208198215561[2] = 0;
   out_4045863208198215561[3] = 0;
   out_4045863208198215561[4] = 0;
   out_4045863208198215561[5] = 0;
   out_4045863208198215561[6] = 0;
   out_4045863208198215561[7] = 1;
   out_4045863208198215561[8] = 0;
   out_4045863208198215561[9] = 0;
   out_4045863208198215561[10] = 0;
   out_4045863208198215561[11] = 0;
   out_4045863208198215561[12] = 0;
   out_4045863208198215561[13] = 0;
   out_4045863208198215561[14] = 0;
   out_4045863208198215561[15] = 0;
   out_4045863208198215561[16] = 0;
   out_4045863208198215561[17] = 0;
   out_4045863208198215561[18] = 0;
   out_4045863208198215561[19] = 0;
   out_4045863208198215561[20] = 0;
   out_4045863208198215561[21] = 0;
   out_4045863208198215561[22] = 0;
   out_4045863208198215561[23] = 0;
   out_4045863208198215561[24] = 0;
   out_4045863208198215561[25] = 0;
   out_4045863208198215561[26] = 0;
   out_4045863208198215561[27] = 0;
   out_4045863208198215561[28] = 0;
   out_4045863208198215561[29] = 0;
   out_4045863208198215561[30] = 1;
   out_4045863208198215561[31] = 0;
   out_4045863208198215561[32] = 0;
   out_4045863208198215561[33] = 0;
   out_4045863208198215561[34] = 0;
   out_4045863208198215561[35] = 0;
   out_4045863208198215561[36] = 0;
   out_4045863208198215561[37] = 0;
   out_4045863208198215561[38] = 0;
   out_4045863208198215561[39] = 0;
   out_4045863208198215561[40] = 0;
   out_4045863208198215561[41] = 0;
   out_4045863208198215561[42] = 0;
   out_4045863208198215561[43] = 0;
   out_4045863208198215561[44] = 0;
   out_4045863208198215561[45] = 0;
   out_4045863208198215561[46] = 0;
   out_4045863208198215561[47] = 0;
   out_4045863208198215561[48] = 0;
   out_4045863208198215561[49] = 0;
   out_4045863208198215561[50] = 0;
   out_4045863208198215561[51] = 0;
   out_4045863208198215561[52] = 0;
   out_4045863208198215561[53] = 1;
   out_4045863208198215561[54] = 0;
   out_4045863208198215561[55] = 0;
   out_4045863208198215561[56] = 0;
   out_4045863208198215561[57] = 0;
   out_4045863208198215561[58] = 0;
   out_4045863208198215561[59] = 0;
   out_4045863208198215561[60] = 0;
   out_4045863208198215561[61] = 0;
   out_4045863208198215561[62] = 0;
   out_4045863208198215561[63] = 0;
   out_4045863208198215561[64] = 0;
   out_4045863208198215561[65] = 0;
}
void h_32(double *state, double *unused, double *out_7781329644986494312) {
   out_7781329644986494312[0] = state[3];
   out_7781329644986494312[1] = state[4];
   out_7781329644986494312[2] = state[5];
   out_7781329644986494312[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6750887721099965498) {
   out_6750887721099965498[0] = 0;
   out_6750887721099965498[1] = 0;
   out_6750887721099965498[2] = 0;
   out_6750887721099965498[3] = 1;
   out_6750887721099965498[4] = 0;
   out_6750887721099965498[5] = 0;
   out_6750887721099965498[6] = 0;
   out_6750887721099965498[7] = 0;
   out_6750887721099965498[8] = 0;
   out_6750887721099965498[9] = 0;
   out_6750887721099965498[10] = 0;
   out_6750887721099965498[11] = 0;
   out_6750887721099965498[12] = 0;
   out_6750887721099965498[13] = 0;
   out_6750887721099965498[14] = 0;
   out_6750887721099965498[15] = 0;
   out_6750887721099965498[16] = 0;
   out_6750887721099965498[17] = 0;
   out_6750887721099965498[18] = 0;
   out_6750887721099965498[19] = 0;
   out_6750887721099965498[20] = 0;
   out_6750887721099965498[21] = 0;
   out_6750887721099965498[22] = 0;
   out_6750887721099965498[23] = 0;
   out_6750887721099965498[24] = 0;
   out_6750887721099965498[25] = 0;
   out_6750887721099965498[26] = 1;
   out_6750887721099965498[27] = 0;
   out_6750887721099965498[28] = 0;
   out_6750887721099965498[29] = 0;
   out_6750887721099965498[30] = 0;
   out_6750887721099965498[31] = 0;
   out_6750887721099965498[32] = 0;
   out_6750887721099965498[33] = 0;
   out_6750887721099965498[34] = 0;
   out_6750887721099965498[35] = 0;
   out_6750887721099965498[36] = 0;
   out_6750887721099965498[37] = 0;
   out_6750887721099965498[38] = 0;
   out_6750887721099965498[39] = 0;
   out_6750887721099965498[40] = 0;
   out_6750887721099965498[41] = 0;
   out_6750887721099965498[42] = 0;
   out_6750887721099965498[43] = 0;
   out_6750887721099965498[44] = 0;
   out_6750887721099965498[45] = 0;
   out_6750887721099965498[46] = 0;
   out_6750887721099965498[47] = 0;
   out_6750887721099965498[48] = 0;
   out_6750887721099965498[49] = 1;
   out_6750887721099965498[50] = 0;
   out_6750887721099965498[51] = 0;
   out_6750887721099965498[52] = 0;
   out_6750887721099965498[53] = 0;
   out_6750887721099965498[54] = 0;
   out_6750887721099965498[55] = 0;
   out_6750887721099965498[56] = 0;
   out_6750887721099965498[57] = 0;
   out_6750887721099965498[58] = 0;
   out_6750887721099965498[59] = 0;
   out_6750887721099965498[60] = 0;
   out_6750887721099965498[61] = 0;
   out_6750887721099965498[62] = 0;
   out_6750887721099965498[63] = 0;
   out_6750887721099965498[64] = 0;
   out_6750887721099965498[65] = 0;
   out_6750887721099965498[66] = 0;
   out_6750887721099965498[67] = 0;
   out_6750887721099965498[68] = 0;
   out_6750887721099965498[69] = 0;
   out_6750887721099965498[70] = 0;
   out_6750887721099965498[71] = 0;
   out_6750887721099965498[72] = 1;
   out_6750887721099965498[73] = 0;
   out_6750887721099965498[74] = 0;
   out_6750887721099965498[75] = 0;
   out_6750887721099965498[76] = 0;
   out_6750887721099965498[77] = 0;
   out_6750887721099965498[78] = 0;
   out_6750887721099965498[79] = 0;
   out_6750887721099965498[80] = 0;
   out_6750887721099965498[81] = 0;
   out_6750887721099965498[82] = 0;
   out_6750887721099965498[83] = 0;
   out_6750887721099965498[84] = 0;
   out_6750887721099965498[85] = 0;
   out_6750887721099965498[86] = 0;
   out_6750887721099965498[87] = 0;
}
void h_13(double *state, double *unused, double *out_8121777646425007865) {
   out_8121777646425007865[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8121777646425007865[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8121777646425007865[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1674701136754016706) {
   out_1674701136754016706[0] = 0;
   out_1674701136754016706[1] = 0;
   out_1674701136754016706[2] = 0;
   out_1674701136754016706[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1674701136754016706[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674701136754016706[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1674701136754016706[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1674701136754016706[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1674701136754016706[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1674701136754016706[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1674701136754016706[10] = 0;
   out_1674701136754016706[11] = 0;
   out_1674701136754016706[12] = 0;
   out_1674701136754016706[13] = 0;
   out_1674701136754016706[14] = 0;
   out_1674701136754016706[15] = 0;
   out_1674701136754016706[16] = 0;
   out_1674701136754016706[17] = 0;
   out_1674701136754016706[18] = 0;
   out_1674701136754016706[19] = 0;
   out_1674701136754016706[20] = 0;
   out_1674701136754016706[21] = 0;
   out_1674701136754016706[22] = 0;
   out_1674701136754016706[23] = 0;
   out_1674701136754016706[24] = 0;
   out_1674701136754016706[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1674701136754016706[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1674701136754016706[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674701136754016706[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1674701136754016706[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1674701136754016706[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1674701136754016706[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1674701136754016706[32] = 0;
   out_1674701136754016706[33] = 0;
   out_1674701136754016706[34] = 0;
   out_1674701136754016706[35] = 0;
   out_1674701136754016706[36] = 0;
   out_1674701136754016706[37] = 0;
   out_1674701136754016706[38] = 0;
   out_1674701136754016706[39] = 0;
   out_1674701136754016706[40] = 0;
   out_1674701136754016706[41] = 0;
   out_1674701136754016706[42] = 0;
   out_1674701136754016706[43] = 0;
   out_1674701136754016706[44] = 0;
   out_1674701136754016706[45] = 0;
   out_1674701136754016706[46] = 0;
   out_1674701136754016706[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1674701136754016706[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1674701136754016706[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1674701136754016706[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1674701136754016706[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1674701136754016706[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1674701136754016706[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1674701136754016706[54] = 0;
   out_1674701136754016706[55] = 0;
   out_1674701136754016706[56] = 0;
   out_1674701136754016706[57] = 0;
   out_1674701136754016706[58] = 0;
   out_1674701136754016706[59] = 0;
   out_1674701136754016706[60] = 0;
   out_1674701136754016706[61] = 0;
   out_1674701136754016706[62] = 0;
   out_1674701136754016706[63] = 0;
   out_1674701136754016706[64] = 0;
   out_1674701136754016706[65] = 0;
}
void h_14(double *state, double *unused, double *out_975100759360487818) {
   out_975100759360487818[0] = state[10];
   out_975100759360487818[1] = state[11];
   out_975100759360487818[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3568062703105687527) {
   out_3568062703105687527[0] = 0;
   out_3568062703105687527[1] = 0;
   out_3568062703105687527[2] = 0;
   out_3568062703105687527[3] = 0;
   out_3568062703105687527[4] = 0;
   out_3568062703105687527[5] = 0;
   out_3568062703105687527[6] = 0;
   out_3568062703105687527[7] = 0;
   out_3568062703105687527[8] = 0;
   out_3568062703105687527[9] = 0;
   out_3568062703105687527[10] = 1;
   out_3568062703105687527[11] = 0;
   out_3568062703105687527[12] = 0;
   out_3568062703105687527[13] = 0;
   out_3568062703105687527[14] = 0;
   out_3568062703105687527[15] = 0;
   out_3568062703105687527[16] = 0;
   out_3568062703105687527[17] = 0;
   out_3568062703105687527[18] = 0;
   out_3568062703105687527[19] = 0;
   out_3568062703105687527[20] = 0;
   out_3568062703105687527[21] = 0;
   out_3568062703105687527[22] = 0;
   out_3568062703105687527[23] = 0;
   out_3568062703105687527[24] = 0;
   out_3568062703105687527[25] = 0;
   out_3568062703105687527[26] = 0;
   out_3568062703105687527[27] = 0;
   out_3568062703105687527[28] = 0;
   out_3568062703105687527[29] = 0;
   out_3568062703105687527[30] = 0;
   out_3568062703105687527[31] = 0;
   out_3568062703105687527[32] = 0;
   out_3568062703105687527[33] = 1;
   out_3568062703105687527[34] = 0;
   out_3568062703105687527[35] = 0;
   out_3568062703105687527[36] = 0;
   out_3568062703105687527[37] = 0;
   out_3568062703105687527[38] = 0;
   out_3568062703105687527[39] = 0;
   out_3568062703105687527[40] = 0;
   out_3568062703105687527[41] = 0;
   out_3568062703105687527[42] = 0;
   out_3568062703105687527[43] = 0;
   out_3568062703105687527[44] = 0;
   out_3568062703105687527[45] = 0;
   out_3568062703105687527[46] = 0;
   out_3568062703105687527[47] = 0;
   out_3568062703105687527[48] = 0;
   out_3568062703105687527[49] = 0;
   out_3568062703105687527[50] = 0;
   out_3568062703105687527[51] = 0;
   out_3568062703105687527[52] = 0;
   out_3568062703105687527[53] = 0;
   out_3568062703105687527[54] = 0;
   out_3568062703105687527[55] = 0;
   out_3568062703105687527[56] = 1;
   out_3568062703105687527[57] = 0;
   out_3568062703105687527[58] = 0;
   out_3568062703105687527[59] = 0;
   out_3568062703105687527[60] = 0;
   out_3568062703105687527[61] = 0;
   out_3568062703105687527[62] = 0;
   out_3568062703105687527[63] = 0;
   out_3568062703105687527[64] = 0;
   out_3568062703105687527[65] = 0;
}
void h_33(double *state, double *unused, double *out_1822743366871707549) {
   out_1822743366871707549[0] = state[16];
   out_1822743366871707549[1] = state[17];
   out_1822743366871707549[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7196420212837073165) {
   out_7196420212837073165[0] = 0;
   out_7196420212837073165[1] = 0;
   out_7196420212837073165[2] = 0;
   out_7196420212837073165[3] = 0;
   out_7196420212837073165[4] = 0;
   out_7196420212837073165[5] = 0;
   out_7196420212837073165[6] = 0;
   out_7196420212837073165[7] = 0;
   out_7196420212837073165[8] = 0;
   out_7196420212837073165[9] = 0;
   out_7196420212837073165[10] = 0;
   out_7196420212837073165[11] = 0;
   out_7196420212837073165[12] = 0;
   out_7196420212837073165[13] = 0;
   out_7196420212837073165[14] = 0;
   out_7196420212837073165[15] = 0;
   out_7196420212837073165[16] = 1;
   out_7196420212837073165[17] = 0;
   out_7196420212837073165[18] = 0;
   out_7196420212837073165[19] = 0;
   out_7196420212837073165[20] = 0;
   out_7196420212837073165[21] = 0;
   out_7196420212837073165[22] = 0;
   out_7196420212837073165[23] = 0;
   out_7196420212837073165[24] = 0;
   out_7196420212837073165[25] = 0;
   out_7196420212837073165[26] = 0;
   out_7196420212837073165[27] = 0;
   out_7196420212837073165[28] = 0;
   out_7196420212837073165[29] = 0;
   out_7196420212837073165[30] = 0;
   out_7196420212837073165[31] = 0;
   out_7196420212837073165[32] = 0;
   out_7196420212837073165[33] = 0;
   out_7196420212837073165[34] = 0;
   out_7196420212837073165[35] = 0;
   out_7196420212837073165[36] = 0;
   out_7196420212837073165[37] = 0;
   out_7196420212837073165[38] = 0;
   out_7196420212837073165[39] = 1;
   out_7196420212837073165[40] = 0;
   out_7196420212837073165[41] = 0;
   out_7196420212837073165[42] = 0;
   out_7196420212837073165[43] = 0;
   out_7196420212837073165[44] = 0;
   out_7196420212837073165[45] = 0;
   out_7196420212837073165[46] = 0;
   out_7196420212837073165[47] = 0;
   out_7196420212837073165[48] = 0;
   out_7196420212837073165[49] = 0;
   out_7196420212837073165[50] = 0;
   out_7196420212837073165[51] = 0;
   out_7196420212837073165[52] = 0;
   out_7196420212837073165[53] = 0;
   out_7196420212837073165[54] = 0;
   out_7196420212837073165[55] = 0;
   out_7196420212837073165[56] = 0;
   out_7196420212837073165[57] = 0;
   out_7196420212837073165[58] = 0;
   out_7196420212837073165[59] = 0;
   out_7196420212837073165[60] = 0;
   out_7196420212837073165[61] = 0;
   out_7196420212837073165[62] = 1;
   out_7196420212837073165[63] = 0;
   out_7196420212837073165[64] = 0;
   out_7196420212837073165[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8958589685007469941) {
  H(in_vec, out_8958589685007469941);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3025361583143407068) {
  err_fun(nom_x, delta_x, out_3025361583143407068);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4198850217462499107) {
  inv_err_fun(nom_x, true_x, out_4198850217462499107);
}
void live_H_mod_fun(double *state, double *out_8679930981745783122) {
  H_mod_fun(state, out_8679930981745783122);
}
void live_f_fun(double *state, double dt, double *out_3683900094095511410) {
  f_fun(state,  dt, out_3683900094095511410);
}
void live_F_fun(double *state, double dt, double *out_5388026379385406588) {
  F_fun(state,  dt, out_5388026379385406588);
}
void live_h_4(double *state, double *unused, double *out_1715536465522411978) {
  h_4(state, unused, out_1715536465522411978);
}
void live_H_4(double *state, double *unused, double *out_3719156232158759943) {
  H_4(state, unused, out_3719156232158759943);
}
void live_h_9(double *state, double *unused, double *out_975100759360487818) {
  h_9(state, unused, out_975100759360487818);
}
void live_H_9(double *state, double *unused, double *out_3568062703105687527) {
  H_9(state, unused, out_3568062703105687527);
}
void live_h_10(double *state, double *unused, double *out_2896629913052241188) {
  h_10(state, unused, out_2896629913052241188);
}
void live_H_10(double *state, double *unused, double *out_7733782407281295071) {
  H_10(state, unused, out_7733782407281295071);
}
void live_h_12(double *state, double *unused, double *out_1790768434786706157) {
  h_12(state, unused, out_1790768434786706157);
}
void live_H_12(double *state, double *unused, double *out_1300300175873201852) {
  H_12(state, unused, out_1300300175873201852);
}
void live_h_31(double *state, double *unused, double *out_5470712750729101726) {
  h_31(state, unused, out_5470712750729101726);
}
void live_H_31(double *state, double *unused, double *out_4045863208198215561) {
  H_31(state, unused, out_4045863208198215561);
}
void live_h_32(double *state, double *unused, double *out_7781329644986494312) {
  h_32(state, unused, out_7781329644986494312);
}
void live_H_32(double *state, double *unused, double *out_6750887721099965498) {
  H_32(state, unused, out_6750887721099965498);
}
void live_h_13(double *state, double *unused, double *out_8121777646425007865) {
  h_13(state, unused, out_8121777646425007865);
}
void live_H_13(double *state, double *unused, double *out_1674701136754016706) {
  H_13(state, unused, out_1674701136754016706);
}
void live_h_14(double *state, double *unused, double *out_975100759360487818) {
  h_14(state, unused, out_975100759360487818);
}
void live_H_14(double *state, double *unused, double *out_3568062703105687527) {
  H_14(state, unused, out_3568062703105687527);
}
void live_h_33(double *state, double *unused, double *out_1822743366871707549) {
  h_33(state, unused, out_1822743366871707549);
}
void live_H_33(double *state, double *unused, double *out_7196420212837073165) {
  H_33(state, unused, out_7196420212837073165);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
