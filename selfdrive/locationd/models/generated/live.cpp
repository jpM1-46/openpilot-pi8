#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7025793885702551025) {
   out_7025793885702551025[0] = 0;
   out_7025793885702551025[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7025793885702551025[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7025793885702551025[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7025793885702551025[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7025793885702551025[5] = -sin(in_vec[1]);
   out_7025793885702551025[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7025793885702551025[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7025793885702551025[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7025793885702551025[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7025793885702551025[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7025793885702551025[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7025793885702551025[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7025793885702551025[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7025793885702551025[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7025793885702551025[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7025793885702551025[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7025793885702551025[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8842764689132081094) {
   out_8842764689132081094[0] = delta_x[0] + nom_x[0];
   out_8842764689132081094[1] = delta_x[1] + nom_x[1];
   out_8842764689132081094[2] = delta_x[2] + nom_x[2];
   out_8842764689132081094[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8842764689132081094[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8842764689132081094[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8842764689132081094[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8842764689132081094[7] = delta_x[6] + nom_x[7];
   out_8842764689132081094[8] = delta_x[7] + nom_x[8];
   out_8842764689132081094[9] = delta_x[8] + nom_x[9];
   out_8842764689132081094[10] = delta_x[9] + nom_x[10];
   out_8842764689132081094[11] = delta_x[10] + nom_x[11];
   out_8842764689132081094[12] = delta_x[11] + nom_x[12];
   out_8842764689132081094[13] = delta_x[12] + nom_x[13];
   out_8842764689132081094[14] = delta_x[13] + nom_x[14];
   out_8842764689132081094[15] = delta_x[14] + nom_x[15];
   out_8842764689132081094[16] = delta_x[15] + nom_x[16];
   out_8842764689132081094[17] = delta_x[16] + nom_x[17];
   out_8842764689132081094[18] = delta_x[17] + nom_x[18];
   out_8842764689132081094[19] = delta_x[18] + nom_x[19];
   out_8842764689132081094[20] = delta_x[19] + nom_x[20];
   out_8842764689132081094[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5199305465308273602) {
   out_5199305465308273602[0] = -nom_x[0] + true_x[0];
   out_5199305465308273602[1] = -nom_x[1] + true_x[1];
   out_5199305465308273602[2] = -nom_x[2] + true_x[2];
   out_5199305465308273602[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5199305465308273602[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5199305465308273602[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5199305465308273602[6] = -nom_x[7] + true_x[7];
   out_5199305465308273602[7] = -nom_x[8] + true_x[8];
   out_5199305465308273602[8] = -nom_x[9] + true_x[9];
   out_5199305465308273602[9] = -nom_x[10] + true_x[10];
   out_5199305465308273602[10] = -nom_x[11] + true_x[11];
   out_5199305465308273602[11] = -nom_x[12] + true_x[12];
   out_5199305465308273602[12] = -nom_x[13] + true_x[13];
   out_5199305465308273602[13] = -nom_x[14] + true_x[14];
   out_5199305465308273602[14] = -nom_x[15] + true_x[15];
   out_5199305465308273602[15] = -nom_x[16] + true_x[16];
   out_5199305465308273602[16] = -nom_x[17] + true_x[17];
   out_5199305465308273602[17] = -nom_x[18] + true_x[18];
   out_5199305465308273602[18] = -nom_x[19] + true_x[19];
   out_5199305465308273602[19] = -nom_x[20] + true_x[20];
   out_5199305465308273602[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3685767440720203406) {
   out_3685767440720203406[0] = 1.0;
   out_3685767440720203406[1] = 0;
   out_3685767440720203406[2] = 0;
   out_3685767440720203406[3] = 0;
   out_3685767440720203406[4] = 0;
   out_3685767440720203406[5] = 0;
   out_3685767440720203406[6] = 0;
   out_3685767440720203406[7] = 0;
   out_3685767440720203406[8] = 0;
   out_3685767440720203406[9] = 0;
   out_3685767440720203406[10] = 0;
   out_3685767440720203406[11] = 0;
   out_3685767440720203406[12] = 0;
   out_3685767440720203406[13] = 0;
   out_3685767440720203406[14] = 0;
   out_3685767440720203406[15] = 0;
   out_3685767440720203406[16] = 0;
   out_3685767440720203406[17] = 0;
   out_3685767440720203406[18] = 0;
   out_3685767440720203406[19] = 0;
   out_3685767440720203406[20] = 0;
   out_3685767440720203406[21] = 0;
   out_3685767440720203406[22] = 1.0;
   out_3685767440720203406[23] = 0;
   out_3685767440720203406[24] = 0;
   out_3685767440720203406[25] = 0;
   out_3685767440720203406[26] = 0;
   out_3685767440720203406[27] = 0;
   out_3685767440720203406[28] = 0;
   out_3685767440720203406[29] = 0;
   out_3685767440720203406[30] = 0;
   out_3685767440720203406[31] = 0;
   out_3685767440720203406[32] = 0;
   out_3685767440720203406[33] = 0;
   out_3685767440720203406[34] = 0;
   out_3685767440720203406[35] = 0;
   out_3685767440720203406[36] = 0;
   out_3685767440720203406[37] = 0;
   out_3685767440720203406[38] = 0;
   out_3685767440720203406[39] = 0;
   out_3685767440720203406[40] = 0;
   out_3685767440720203406[41] = 0;
   out_3685767440720203406[42] = 0;
   out_3685767440720203406[43] = 0;
   out_3685767440720203406[44] = 1.0;
   out_3685767440720203406[45] = 0;
   out_3685767440720203406[46] = 0;
   out_3685767440720203406[47] = 0;
   out_3685767440720203406[48] = 0;
   out_3685767440720203406[49] = 0;
   out_3685767440720203406[50] = 0;
   out_3685767440720203406[51] = 0;
   out_3685767440720203406[52] = 0;
   out_3685767440720203406[53] = 0;
   out_3685767440720203406[54] = 0;
   out_3685767440720203406[55] = 0;
   out_3685767440720203406[56] = 0;
   out_3685767440720203406[57] = 0;
   out_3685767440720203406[58] = 0;
   out_3685767440720203406[59] = 0;
   out_3685767440720203406[60] = 0;
   out_3685767440720203406[61] = 0;
   out_3685767440720203406[62] = 0;
   out_3685767440720203406[63] = 0;
   out_3685767440720203406[64] = 0;
   out_3685767440720203406[65] = 0;
   out_3685767440720203406[66] = -0.5*state[4];
   out_3685767440720203406[67] = -0.5*state[5];
   out_3685767440720203406[68] = -0.5*state[6];
   out_3685767440720203406[69] = 0;
   out_3685767440720203406[70] = 0;
   out_3685767440720203406[71] = 0;
   out_3685767440720203406[72] = 0;
   out_3685767440720203406[73] = 0;
   out_3685767440720203406[74] = 0;
   out_3685767440720203406[75] = 0;
   out_3685767440720203406[76] = 0;
   out_3685767440720203406[77] = 0;
   out_3685767440720203406[78] = 0;
   out_3685767440720203406[79] = 0;
   out_3685767440720203406[80] = 0;
   out_3685767440720203406[81] = 0;
   out_3685767440720203406[82] = 0;
   out_3685767440720203406[83] = 0;
   out_3685767440720203406[84] = 0;
   out_3685767440720203406[85] = 0;
   out_3685767440720203406[86] = 0;
   out_3685767440720203406[87] = 0.5*state[3];
   out_3685767440720203406[88] = 0.5*state[6];
   out_3685767440720203406[89] = -0.5*state[5];
   out_3685767440720203406[90] = 0;
   out_3685767440720203406[91] = 0;
   out_3685767440720203406[92] = 0;
   out_3685767440720203406[93] = 0;
   out_3685767440720203406[94] = 0;
   out_3685767440720203406[95] = 0;
   out_3685767440720203406[96] = 0;
   out_3685767440720203406[97] = 0;
   out_3685767440720203406[98] = 0;
   out_3685767440720203406[99] = 0;
   out_3685767440720203406[100] = 0;
   out_3685767440720203406[101] = 0;
   out_3685767440720203406[102] = 0;
   out_3685767440720203406[103] = 0;
   out_3685767440720203406[104] = 0;
   out_3685767440720203406[105] = 0;
   out_3685767440720203406[106] = 0;
   out_3685767440720203406[107] = 0;
   out_3685767440720203406[108] = -0.5*state[6];
   out_3685767440720203406[109] = 0.5*state[3];
   out_3685767440720203406[110] = 0.5*state[4];
   out_3685767440720203406[111] = 0;
   out_3685767440720203406[112] = 0;
   out_3685767440720203406[113] = 0;
   out_3685767440720203406[114] = 0;
   out_3685767440720203406[115] = 0;
   out_3685767440720203406[116] = 0;
   out_3685767440720203406[117] = 0;
   out_3685767440720203406[118] = 0;
   out_3685767440720203406[119] = 0;
   out_3685767440720203406[120] = 0;
   out_3685767440720203406[121] = 0;
   out_3685767440720203406[122] = 0;
   out_3685767440720203406[123] = 0;
   out_3685767440720203406[124] = 0;
   out_3685767440720203406[125] = 0;
   out_3685767440720203406[126] = 0;
   out_3685767440720203406[127] = 0;
   out_3685767440720203406[128] = 0;
   out_3685767440720203406[129] = 0.5*state[5];
   out_3685767440720203406[130] = -0.5*state[4];
   out_3685767440720203406[131] = 0.5*state[3];
   out_3685767440720203406[132] = 0;
   out_3685767440720203406[133] = 0;
   out_3685767440720203406[134] = 0;
   out_3685767440720203406[135] = 0;
   out_3685767440720203406[136] = 0;
   out_3685767440720203406[137] = 0;
   out_3685767440720203406[138] = 0;
   out_3685767440720203406[139] = 0;
   out_3685767440720203406[140] = 0;
   out_3685767440720203406[141] = 0;
   out_3685767440720203406[142] = 0;
   out_3685767440720203406[143] = 0;
   out_3685767440720203406[144] = 0;
   out_3685767440720203406[145] = 0;
   out_3685767440720203406[146] = 0;
   out_3685767440720203406[147] = 0;
   out_3685767440720203406[148] = 0;
   out_3685767440720203406[149] = 0;
   out_3685767440720203406[150] = 0;
   out_3685767440720203406[151] = 0;
   out_3685767440720203406[152] = 0;
   out_3685767440720203406[153] = 1.0;
   out_3685767440720203406[154] = 0;
   out_3685767440720203406[155] = 0;
   out_3685767440720203406[156] = 0;
   out_3685767440720203406[157] = 0;
   out_3685767440720203406[158] = 0;
   out_3685767440720203406[159] = 0;
   out_3685767440720203406[160] = 0;
   out_3685767440720203406[161] = 0;
   out_3685767440720203406[162] = 0;
   out_3685767440720203406[163] = 0;
   out_3685767440720203406[164] = 0;
   out_3685767440720203406[165] = 0;
   out_3685767440720203406[166] = 0;
   out_3685767440720203406[167] = 0;
   out_3685767440720203406[168] = 0;
   out_3685767440720203406[169] = 0;
   out_3685767440720203406[170] = 0;
   out_3685767440720203406[171] = 0;
   out_3685767440720203406[172] = 0;
   out_3685767440720203406[173] = 0;
   out_3685767440720203406[174] = 0;
   out_3685767440720203406[175] = 1.0;
   out_3685767440720203406[176] = 0;
   out_3685767440720203406[177] = 0;
   out_3685767440720203406[178] = 0;
   out_3685767440720203406[179] = 0;
   out_3685767440720203406[180] = 0;
   out_3685767440720203406[181] = 0;
   out_3685767440720203406[182] = 0;
   out_3685767440720203406[183] = 0;
   out_3685767440720203406[184] = 0;
   out_3685767440720203406[185] = 0;
   out_3685767440720203406[186] = 0;
   out_3685767440720203406[187] = 0;
   out_3685767440720203406[188] = 0;
   out_3685767440720203406[189] = 0;
   out_3685767440720203406[190] = 0;
   out_3685767440720203406[191] = 0;
   out_3685767440720203406[192] = 0;
   out_3685767440720203406[193] = 0;
   out_3685767440720203406[194] = 0;
   out_3685767440720203406[195] = 0;
   out_3685767440720203406[196] = 0;
   out_3685767440720203406[197] = 1.0;
   out_3685767440720203406[198] = 0;
   out_3685767440720203406[199] = 0;
   out_3685767440720203406[200] = 0;
   out_3685767440720203406[201] = 0;
   out_3685767440720203406[202] = 0;
   out_3685767440720203406[203] = 0;
   out_3685767440720203406[204] = 0;
   out_3685767440720203406[205] = 0;
   out_3685767440720203406[206] = 0;
   out_3685767440720203406[207] = 0;
   out_3685767440720203406[208] = 0;
   out_3685767440720203406[209] = 0;
   out_3685767440720203406[210] = 0;
   out_3685767440720203406[211] = 0;
   out_3685767440720203406[212] = 0;
   out_3685767440720203406[213] = 0;
   out_3685767440720203406[214] = 0;
   out_3685767440720203406[215] = 0;
   out_3685767440720203406[216] = 0;
   out_3685767440720203406[217] = 0;
   out_3685767440720203406[218] = 0;
   out_3685767440720203406[219] = 1.0;
   out_3685767440720203406[220] = 0;
   out_3685767440720203406[221] = 0;
   out_3685767440720203406[222] = 0;
   out_3685767440720203406[223] = 0;
   out_3685767440720203406[224] = 0;
   out_3685767440720203406[225] = 0;
   out_3685767440720203406[226] = 0;
   out_3685767440720203406[227] = 0;
   out_3685767440720203406[228] = 0;
   out_3685767440720203406[229] = 0;
   out_3685767440720203406[230] = 0;
   out_3685767440720203406[231] = 0;
   out_3685767440720203406[232] = 0;
   out_3685767440720203406[233] = 0;
   out_3685767440720203406[234] = 0;
   out_3685767440720203406[235] = 0;
   out_3685767440720203406[236] = 0;
   out_3685767440720203406[237] = 0;
   out_3685767440720203406[238] = 0;
   out_3685767440720203406[239] = 0;
   out_3685767440720203406[240] = 0;
   out_3685767440720203406[241] = 1.0;
   out_3685767440720203406[242] = 0;
   out_3685767440720203406[243] = 0;
   out_3685767440720203406[244] = 0;
   out_3685767440720203406[245] = 0;
   out_3685767440720203406[246] = 0;
   out_3685767440720203406[247] = 0;
   out_3685767440720203406[248] = 0;
   out_3685767440720203406[249] = 0;
   out_3685767440720203406[250] = 0;
   out_3685767440720203406[251] = 0;
   out_3685767440720203406[252] = 0;
   out_3685767440720203406[253] = 0;
   out_3685767440720203406[254] = 0;
   out_3685767440720203406[255] = 0;
   out_3685767440720203406[256] = 0;
   out_3685767440720203406[257] = 0;
   out_3685767440720203406[258] = 0;
   out_3685767440720203406[259] = 0;
   out_3685767440720203406[260] = 0;
   out_3685767440720203406[261] = 0;
   out_3685767440720203406[262] = 0;
   out_3685767440720203406[263] = 1.0;
   out_3685767440720203406[264] = 0;
   out_3685767440720203406[265] = 0;
   out_3685767440720203406[266] = 0;
   out_3685767440720203406[267] = 0;
   out_3685767440720203406[268] = 0;
   out_3685767440720203406[269] = 0;
   out_3685767440720203406[270] = 0;
   out_3685767440720203406[271] = 0;
   out_3685767440720203406[272] = 0;
   out_3685767440720203406[273] = 0;
   out_3685767440720203406[274] = 0;
   out_3685767440720203406[275] = 0;
   out_3685767440720203406[276] = 0;
   out_3685767440720203406[277] = 0;
   out_3685767440720203406[278] = 0;
   out_3685767440720203406[279] = 0;
   out_3685767440720203406[280] = 0;
   out_3685767440720203406[281] = 0;
   out_3685767440720203406[282] = 0;
   out_3685767440720203406[283] = 0;
   out_3685767440720203406[284] = 0;
   out_3685767440720203406[285] = 1.0;
   out_3685767440720203406[286] = 0;
   out_3685767440720203406[287] = 0;
   out_3685767440720203406[288] = 0;
   out_3685767440720203406[289] = 0;
   out_3685767440720203406[290] = 0;
   out_3685767440720203406[291] = 0;
   out_3685767440720203406[292] = 0;
   out_3685767440720203406[293] = 0;
   out_3685767440720203406[294] = 0;
   out_3685767440720203406[295] = 0;
   out_3685767440720203406[296] = 0;
   out_3685767440720203406[297] = 0;
   out_3685767440720203406[298] = 0;
   out_3685767440720203406[299] = 0;
   out_3685767440720203406[300] = 0;
   out_3685767440720203406[301] = 0;
   out_3685767440720203406[302] = 0;
   out_3685767440720203406[303] = 0;
   out_3685767440720203406[304] = 0;
   out_3685767440720203406[305] = 0;
   out_3685767440720203406[306] = 0;
   out_3685767440720203406[307] = 1.0;
   out_3685767440720203406[308] = 0;
   out_3685767440720203406[309] = 0;
   out_3685767440720203406[310] = 0;
   out_3685767440720203406[311] = 0;
   out_3685767440720203406[312] = 0;
   out_3685767440720203406[313] = 0;
   out_3685767440720203406[314] = 0;
   out_3685767440720203406[315] = 0;
   out_3685767440720203406[316] = 0;
   out_3685767440720203406[317] = 0;
   out_3685767440720203406[318] = 0;
   out_3685767440720203406[319] = 0;
   out_3685767440720203406[320] = 0;
   out_3685767440720203406[321] = 0;
   out_3685767440720203406[322] = 0;
   out_3685767440720203406[323] = 0;
   out_3685767440720203406[324] = 0;
   out_3685767440720203406[325] = 0;
   out_3685767440720203406[326] = 0;
   out_3685767440720203406[327] = 0;
   out_3685767440720203406[328] = 0;
   out_3685767440720203406[329] = 1.0;
   out_3685767440720203406[330] = 0;
   out_3685767440720203406[331] = 0;
   out_3685767440720203406[332] = 0;
   out_3685767440720203406[333] = 0;
   out_3685767440720203406[334] = 0;
   out_3685767440720203406[335] = 0;
   out_3685767440720203406[336] = 0;
   out_3685767440720203406[337] = 0;
   out_3685767440720203406[338] = 0;
   out_3685767440720203406[339] = 0;
   out_3685767440720203406[340] = 0;
   out_3685767440720203406[341] = 0;
   out_3685767440720203406[342] = 0;
   out_3685767440720203406[343] = 0;
   out_3685767440720203406[344] = 0;
   out_3685767440720203406[345] = 0;
   out_3685767440720203406[346] = 0;
   out_3685767440720203406[347] = 0;
   out_3685767440720203406[348] = 0;
   out_3685767440720203406[349] = 0;
   out_3685767440720203406[350] = 0;
   out_3685767440720203406[351] = 1.0;
   out_3685767440720203406[352] = 0;
   out_3685767440720203406[353] = 0;
   out_3685767440720203406[354] = 0;
   out_3685767440720203406[355] = 0;
   out_3685767440720203406[356] = 0;
   out_3685767440720203406[357] = 0;
   out_3685767440720203406[358] = 0;
   out_3685767440720203406[359] = 0;
   out_3685767440720203406[360] = 0;
   out_3685767440720203406[361] = 0;
   out_3685767440720203406[362] = 0;
   out_3685767440720203406[363] = 0;
   out_3685767440720203406[364] = 0;
   out_3685767440720203406[365] = 0;
   out_3685767440720203406[366] = 0;
   out_3685767440720203406[367] = 0;
   out_3685767440720203406[368] = 0;
   out_3685767440720203406[369] = 0;
   out_3685767440720203406[370] = 0;
   out_3685767440720203406[371] = 0;
   out_3685767440720203406[372] = 0;
   out_3685767440720203406[373] = 1.0;
   out_3685767440720203406[374] = 0;
   out_3685767440720203406[375] = 0;
   out_3685767440720203406[376] = 0;
   out_3685767440720203406[377] = 0;
   out_3685767440720203406[378] = 0;
   out_3685767440720203406[379] = 0;
   out_3685767440720203406[380] = 0;
   out_3685767440720203406[381] = 0;
   out_3685767440720203406[382] = 0;
   out_3685767440720203406[383] = 0;
   out_3685767440720203406[384] = 0;
   out_3685767440720203406[385] = 0;
   out_3685767440720203406[386] = 0;
   out_3685767440720203406[387] = 0;
   out_3685767440720203406[388] = 0;
   out_3685767440720203406[389] = 0;
   out_3685767440720203406[390] = 0;
   out_3685767440720203406[391] = 0;
   out_3685767440720203406[392] = 0;
   out_3685767440720203406[393] = 0;
   out_3685767440720203406[394] = 0;
   out_3685767440720203406[395] = 1.0;
   out_3685767440720203406[396] = 0;
   out_3685767440720203406[397] = 0;
   out_3685767440720203406[398] = 0;
   out_3685767440720203406[399] = 0;
   out_3685767440720203406[400] = 0;
   out_3685767440720203406[401] = 0;
   out_3685767440720203406[402] = 0;
   out_3685767440720203406[403] = 0;
   out_3685767440720203406[404] = 0;
   out_3685767440720203406[405] = 0;
   out_3685767440720203406[406] = 0;
   out_3685767440720203406[407] = 0;
   out_3685767440720203406[408] = 0;
   out_3685767440720203406[409] = 0;
   out_3685767440720203406[410] = 0;
   out_3685767440720203406[411] = 0;
   out_3685767440720203406[412] = 0;
   out_3685767440720203406[413] = 0;
   out_3685767440720203406[414] = 0;
   out_3685767440720203406[415] = 0;
   out_3685767440720203406[416] = 0;
   out_3685767440720203406[417] = 1.0;
   out_3685767440720203406[418] = 0;
   out_3685767440720203406[419] = 0;
   out_3685767440720203406[420] = 0;
   out_3685767440720203406[421] = 0;
   out_3685767440720203406[422] = 0;
   out_3685767440720203406[423] = 0;
   out_3685767440720203406[424] = 0;
   out_3685767440720203406[425] = 0;
   out_3685767440720203406[426] = 0;
   out_3685767440720203406[427] = 0;
   out_3685767440720203406[428] = 0;
   out_3685767440720203406[429] = 0;
   out_3685767440720203406[430] = 0;
   out_3685767440720203406[431] = 0;
   out_3685767440720203406[432] = 0;
   out_3685767440720203406[433] = 0;
   out_3685767440720203406[434] = 0;
   out_3685767440720203406[435] = 0;
   out_3685767440720203406[436] = 0;
   out_3685767440720203406[437] = 0;
   out_3685767440720203406[438] = 0;
   out_3685767440720203406[439] = 1.0;
   out_3685767440720203406[440] = 0;
   out_3685767440720203406[441] = 0;
   out_3685767440720203406[442] = 0;
   out_3685767440720203406[443] = 0;
   out_3685767440720203406[444] = 0;
   out_3685767440720203406[445] = 0;
   out_3685767440720203406[446] = 0;
   out_3685767440720203406[447] = 0;
   out_3685767440720203406[448] = 0;
   out_3685767440720203406[449] = 0;
   out_3685767440720203406[450] = 0;
   out_3685767440720203406[451] = 0;
   out_3685767440720203406[452] = 0;
   out_3685767440720203406[453] = 0;
   out_3685767440720203406[454] = 0;
   out_3685767440720203406[455] = 0;
   out_3685767440720203406[456] = 0;
   out_3685767440720203406[457] = 0;
   out_3685767440720203406[458] = 0;
   out_3685767440720203406[459] = 0;
   out_3685767440720203406[460] = 0;
   out_3685767440720203406[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3828607459824926178) {
   out_3828607459824926178[0] = dt*state[7] + state[0];
   out_3828607459824926178[1] = dt*state[8] + state[1];
   out_3828607459824926178[2] = dt*state[9] + state[2];
   out_3828607459824926178[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3828607459824926178[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3828607459824926178[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3828607459824926178[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3828607459824926178[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3828607459824926178[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3828607459824926178[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3828607459824926178[10] = state[10];
   out_3828607459824926178[11] = state[11];
   out_3828607459824926178[12] = state[12];
   out_3828607459824926178[13] = state[13];
   out_3828607459824926178[14] = state[14];
   out_3828607459824926178[15] = state[15];
   out_3828607459824926178[16] = state[16];
   out_3828607459824926178[17] = state[17];
   out_3828607459824926178[18] = state[18];
   out_3828607459824926178[19] = state[19];
   out_3828607459824926178[20] = state[20];
   out_3828607459824926178[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5165582692164970601) {
   out_5165582692164970601[0] = 1;
   out_5165582692164970601[1] = 0;
   out_5165582692164970601[2] = 0;
   out_5165582692164970601[3] = 0;
   out_5165582692164970601[4] = 0;
   out_5165582692164970601[5] = 0;
   out_5165582692164970601[6] = dt;
   out_5165582692164970601[7] = 0;
   out_5165582692164970601[8] = 0;
   out_5165582692164970601[9] = 0;
   out_5165582692164970601[10] = 0;
   out_5165582692164970601[11] = 0;
   out_5165582692164970601[12] = 0;
   out_5165582692164970601[13] = 0;
   out_5165582692164970601[14] = 0;
   out_5165582692164970601[15] = 0;
   out_5165582692164970601[16] = 0;
   out_5165582692164970601[17] = 0;
   out_5165582692164970601[18] = 0;
   out_5165582692164970601[19] = 0;
   out_5165582692164970601[20] = 0;
   out_5165582692164970601[21] = 0;
   out_5165582692164970601[22] = 1;
   out_5165582692164970601[23] = 0;
   out_5165582692164970601[24] = 0;
   out_5165582692164970601[25] = 0;
   out_5165582692164970601[26] = 0;
   out_5165582692164970601[27] = 0;
   out_5165582692164970601[28] = dt;
   out_5165582692164970601[29] = 0;
   out_5165582692164970601[30] = 0;
   out_5165582692164970601[31] = 0;
   out_5165582692164970601[32] = 0;
   out_5165582692164970601[33] = 0;
   out_5165582692164970601[34] = 0;
   out_5165582692164970601[35] = 0;
   out_5165582692164970601[36] = 0;
   out_5165582692164970601[37] = 0;
   out_5165582692164970601[38] = 0;
   out_5165582692164970601[39] = 0;
   out_5165582692164970601[40] = 0;
   out_5165582692164970601[41] = 0;
   out_5165582692164970601[42] = 0;
   out_5165582692164970601[43] = 0;
   out_5165582692164970601[44] = 1;
   out_5165582692164970601[45] = 0;
   out_5165582692164970601[46] = 0;
   out_5165582692164970601[47] = 0;
   out_5165582692164970601[48] = 0;
   out_5165582692164970601[49] = 0;
   out_5165582692164970601[50] = dt;
   out_5165582692164970601[51] = 0;
   out_5165582692164970601[52] = 0;
   out_5165582692164970601[53] = 0;
   out_5165582692164970601[54] = 0;
   out_5165582692164970601[55] = 0;
   out_5165582692164970601[56] = 0;
   out_5165582692164970601[57] = 0;
   out_5165582692164970601[58] = 0;
   out_5165582692164970601[59] = 0;
   out_5165582692164970601[60] = 0;
   out_5165582692164970601[61] = 0;
   out_5165582692164970601[62] = 0;
   out_5165582692164970601[63] = 0;
   out_5165582692164970601[64] = 0;
   out_5165582692164970601[65] = 0;
   out_5165582692164970601[66] = 1;
   out_5165582692164970601[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5165582692164970601[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5165582692164970601[69] = 0;
   out_5165582692164970601[70] = 0;
   out_5165582692164970601[71] = 0;
   out_5165582692164970601[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5165582692164970601[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5165582692164970601[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5165582692164970601[75] = 0;
   out_5165582692164970601[76] = 0;
   out_5165582692164970601[77] = 0;
   out_5165582692164970601[78] = 0;
   out_5165582692164970601[79] = 0;
   out_5165582692164970601[80] = 0;
   out_5165582692164970601[81] = 0;
   out_5165582692164970601[82] = 0;
   out_5165582692164970601[83] = 0;
   out_5165582692164970601[84] = 0;
   out_5165582692164970601[85] = 0;
   out_5165582692164970601[86] = 0;
   out_5165582692164970601[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5165582692164970601[88] = 1;
   out_5165582692164970601[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5165582692164970601[90] = 0;
   out_5165582692164970601[91] = 0;
   out_5165582692164970601[92] = 0;
   out_5165582692164970601[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5165582692164970601[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5165582692164970601[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5165582692164970601[96] = 0;
   out_5165582692164970601[97] = 0;
   out_5165582692164970601[98] = 0;
   out_5165582692164970601[99] = 0;
   out_5165582692164970601[100] = 0;
   out_5165582692164970601[101] = 0;
   out_5165582692164970601[102] = 0;
   out_5165582692164970601[103] = 0;
   out_5165582692164970601[104] = 0;
   out_5165582692164970601[105] = 0;
   out_5165582692164970601[106] = 0;
   out_5165582692164970601[107] = 0;
   out_5165582692164970601[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5165582692164970601[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5165582692164970601[110] = 1;
   out_5165582692164970601[111] = 0;
   out_5165582692164970601[112] = 0;
   out_5165582692164970601[113] = 0;
   out_5165582692164970601[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5165582692164970601[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5165582692164970601[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5165582692164970601[117] = 0;
   out_5165582692164970601[118] = 0;
   out_5165582692164970601[119] = 0;
   out_5165582692164970601[120] = 0;
   out_5165582692164970601[121] = 0;
   out_5165582692164970601[122] = 0;
   out_5165582692164970601[123] = 0;
   out_5165582692164970601[124] = 0;
   out_5165582692164970601[125] = 0;
   out_5165582692164970601[126] = 0;
   out_5165582692164970601[127] = 0;
   out_5165582692164970601[128] = 0;
   out_5165582692164970601[129] = 0;
   out_5165582692164970601[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5165582692164970601[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5165582692164970601[132] = 1;
   out_5165582692164970601[133] = 0;
   out_5165582692164970601[134] = 0;
   out_5165582692164970601[135] = 0;
   out_5165582692164970601[136] = 0;
   out_5165582692164970601[137] = 0;
   out_5165582692164970601[138] = 0;
   out_5165582692164970601[139] = 0;
   out_5165582692164970601[140] = 0;
   out_5165582692164970601[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5165582692164970601[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5165582692164970601[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5165582692164970601[144] = 0;
   out_5165582692164970601[145] = 0;
   out_5165582692164970601[146] = 0;
   out_5165582692164970601[147] = 0;
   out_5165582692164970601[148] = 0;
   out_5165582692164970601[149] = 0;
   out_5165582692164970601[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5165582692164970601[151] = 0;
   out_5165582692164970601[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5165582692164970601[153] = 0;
   out_5165582692164970601[154] = 1;
   out_5165582692164970601[155] = 0;
   out_5165582692164970601[156] = 0;
   out_5165582692164970601[157] = 0;
   out_5165582692164970601[158] = 0;
   out_5165582692164970601[159] = 0;
   out_5165582692164970601[160] = 0;
   out_5165582692164970601[161] = 0;
   out_5165582692164970601[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5165582692164970601[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5165582692164970601[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5165582692164970601[165] = 0;
   out_5165582692164970601[166] = 0;
   out_5165582692164970601[167] = 0;
   out_5165582692164970601[168] = 0;
   out_5165582692164970601[169] = 0;
   out_5165582692164970601[170] = 0;
   out_5165582692164970601[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5165582692164970601[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5165582692164970601[173] = 0;
   out_5165582692164970601[174] = 0;
   out_5165582692164970601[175] = 0;
   out_5165582692164970601[176] = 1;
   out_5165582692164970601[177] = 0;
   out_5165582692164970601[178] = 0;
   out_5165582692164970601[179] = 0;
   out_5165582692164970601[180] = 0;
   out_5165582692164970601[181] = 0;
   out_5165582692164970601[182] = 0;
   out_5165582692164970601[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5165582692164970601[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5165582692164970601[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5165582692164970601[186] = 0;
   out_5165582692164970601[187] = 0;
   out_5165582692164970601[188] = 0;
   out_5165582692164970601[189] = 0;
   out_5165582692164970601[190] = 0;
   out_5165582692164970601[191] = 0;
   out_5165582692164970601[192] = 0;
   out_5165582692164970601[193] = 0;
   out_5165582692164970601[194] = 0;
   out_5165582692164970601[195] = 0;
   out_5165582692164970601[196] = 0;
   out_5165582692164970601[197] = 0;
   out_5165582692164970601[198] = 1;
   out_5165582692164970601[199] = 0;
   out_5165582692164970601[200] = 0;
   out_5165582692164970601[201] = 0;
   out_5165582692164970601[202] = 0;
   out_5165582692164970601[203] = 0;
   out_5165582692164970601[204] = 0;
   out_5165582692164970601[205] = 0;
   out_5165582692164970601[206] = 0;
   out_5165582692164970601[207] = 0;
   out_5165582692164970601[208] = 0;
   out_5165582692164970601[209] = 0;
   out_5165582692164970601[210] = 0;
   out_5165582692164970601[211] = 0;
   out_5165582692164970601[212] = 0;
   out_5165582692164970601[213] = 0;
   out_5165582692164970601[214] = 0;
   out_5165582692164970601[215] = 0;
   out_5165582692164970601[216] = 0;
   out_5165582692164970601[217] = 0;
   out_5165582692164970601[218] = 0;
   out_5165582692164970601[219] = 0;
   out_5165582692164970601[220] = 1;
   out_5165582692164970601[221] = 0;
   out_5165582692164970601[222] = 0;
   out_5165582692164970601[223] = 0;
   out_5165582692164970601[224] = 0;
   out_5165582692164970601[225] = 0;
   out_5165582692164970601[226] = 0;
   out_5165582692164970601[227] = 0;
   out_5165582692164970601[228] = 0;
   out_5165582692164970601[229] = 0;
   out_5165582692164970601[230] = 0;
   out_5165582692164970601[231] = 0;
   out_5165582692164970601[232] = 0;
   out_5165582692164970601[233] = 0;
   out_5165582692164970601[234] = 0;
   out_5165582692164970601[235] = 0;
   out_5165582692164970601[236] = 0;
   out_5165582692164970601[237] = 0;
   out_5165582692164970601[238] = 0;
   out_5165582692164970601[239] = 0;
   out_5165582692164970601[240] = 0;
   out_5165582692164970601[241] = 0;
   out_5165582692164970601[242] = 1;
   out_5165582692164970601[243] = 0;
   out_5165582692164970601[244] = 0;
   out_5165582692164970601[245] = 0;
   out_5165582692164970601[246] = 0;
   out_5165582692164970601[247] = 0;
   out_5165582692164970601[248] = 0;
   out_5165582692164970601[249] = 0;
   out_5165582692164970601[250] = 0;
   out_5165582692164970601[251] = 0;
   out_5165582692164970601[252] = 0;
   out_5165582692164970601[253] = 0;
   out_5165582692164970601[254] = 0;
   out_5165582692164970601[255] = 0;
   out_5165582692164970601[256] = 0;
   out_5165582692164970601[257] = 0;
   out_5165582692164970601[258] = 0;
   out_5165582692164970601[259] = 0;
   out_5165582692164970601[260] = 0;
   out_5165582692164970601[261] = 0;
   out_5165582692164970601[262] = 0;
   out_5165582692164970601[263] = 0;
   out_5165582692164970601[264] = 1;
   out_5165582692164970601[265] = 0;
   out_5165582692164970601[266] = 0;
   out_5165582692164970601[267] = 0;
   out_5165582692164970601[268] = 0;
   out_5165582692164970601[269] = 0;
   out_5165582692164970601[270] = 0;
   out_5165582692164970601[271] = 0;
   out_5165582692164970601[272] = 0;
   out_5165582692164970601[273] = 0;
   out_5165582692164970601[274] = 0;
   out_5165582692164970601[275] = 0;
   out_5165582692164970601[276] = 0;
   out_5165582692164970601[277] = 0;
   out_5165582692164970601[278] = 0;
   out_5165582692164970601[279] = 0;
   out_5165582692164970601[280] = 0;
   out_5165582692164970601[281] = 0;
   out_5165582692164970601[282] = 0;
   out_5165582692164970601[283] = 0;
   out_5165582692164970601[284] = 0;
   out_5165582692164970601[285] = 0;
   out_5165582692164970601[286] = 1;
   out_5165582692164970601[287] = 0;
   out_5165582692164970601[288] = 0;
   out_5165582692164970601[289] = 0;
   out_5165582692164970601[290] = 0;
   out_5165582692164970601[291] = 0;
   out_5165582692164970601[292] = 0;
   out_5165582692164970601[293] = 0;
   out_5165582692164970601[294] = 0;
   out_5165582692164970601[295] = 0;
   out_5165582692164970601[296] = 0;
   out_5165582692164970601[297] = 0;
   out_5165582692164970601[298] = 0;
   out_5165582692164970601[299] = 0;
   out_5165582692164970601[300] = 0;
   out_5165582692164970601[301] = 0;
   out_5165582692164970601[302] = 0;
   out_5165582692164970601[303] = 0;
   out_5165582692164970601[304] = 0;
   out_5165582692164970601[305] = 0;
   out_5165582692164970601[306] = 0;
   out_5165582692164970601[307] = 0;
   out_5165582692164970601[308] = 1;
   out_5165582692164970601[309] = 0;
   out_5165582692164970601[310] = 0;
   out_5165582692164970601[311] = 0;
   out_5165582692164970601[312] = 0;
   out_5165582692164970601[313] = 0;
   out_5165582692164970601[314] = 0;
   out_5165582692164970601[315] = 0;
   out_5165582692164970601[316] = 0;
   out_5165582692164970601[317] = 0;
   out_5165582692164970601[318] = 0;
   out_5165582692164970601[319] = 0;
   out_5165582692164970601[320] = 0;
   out_5165582692164970601[321] = 0;
   out_5165582692164970601[322] = 0;
   out_5165582692164970601[323] = 0;
   out_5165582692164970601[324] = 0;
   out_5165582692164970601[325] = 0;
   out_5165582692164970601[326] = 0;
   out_5165582692164970601[327] = 0;
   out_5165582692164970601[328] = 0;
   out_5165582692164970601[329] = 0;
   out_5165582692164970601[330] = 1;
   out_5165582692164970601[331] = 0;
   out_5165582692164970601[332] = 0;
   out_5165582692164970601[333] = 0;
   out_5165582692164970601[334] = 0;
   out_5165582692164970601[335] = 0;
   out_5165582692164970601[336] = 0;
   out_5165582692164970601[337] = 0;
   out_5165582692164970601[338] = 0;
   out_5165582692164970601[339] = 0;
   out_5165582692164970601[340] = 0;
   out_5165582692164970601[341] = 0;
   out_5165582692164970601[342] = 0;
   out_5165582692164970601[343] = 0;
   out_5165582692164970601[344] = 0;
   out_5165582692164970601[345] = 0;
   out_5165582692164970601[346] = 0;
   out_5165582692164970601[347] = 0;
   out_5165582692164970601[348] = 0;
   out_5165582692164970601[349] = 0;
   out_5165582692164970601[350] = 0;
   out_5165582692164970601[351] = 0;
   out_5165582692164970601[352] = 1;
   out_5165582692164970601[353] = 0;
   out_5165582692164970601[354] = 0;
   out_5165582692164970601[355] = 0;
   out_5165582692164970601[356] = 0;
   out_5165582692164970601[357] = 0;
   out_5165582692164970601[358] = 0;
   out_5165582692164970601[359] = 0;
   out_5165582692164970601[360] = 0;
   out_5165582692164970601[361] = 0;
   out_5165582692164970601[362] = 0;
   out_5165582692164970601[363] = 0;
   out_5165582692164970601[364] = 0;
   out_5165582692164970601[365] = 0;
   out_5165582692164970601[366] = 0;
   out_5165582692164970601[367] = 0;
   out_5165582692164970601[368] = 0;
   out_5165582692164970601[369] = 0;
   out_5165582692164970601[370] = 0;
   out_5165582692164970601[371] = 0;
   out_5165582692164970601[372] = 0;
   out_5165582692164970601[373] = 0;
   out_5165582692164970601[374] = 1;
   out_5165582692164970601[375] = 0;
   out_5165582692164970601[376] = 0;
   out_5165582692164970601[377] = 0;
   out_5165582692164970601[378] = 0;
   out_5165582692164970601[379] = 0;
   out_5165582692164970601[380] = 0;
   out_5165582692164970601[381] = 0;
   out_5165582692164970601[382] = 0;
   out_5165582692164970601[383] = 0;
   out_5165582692164970601[384] = 0;
   out_5165582692164970601[385] = 0;
   out_5165582692164970601[386] = 0;
   out_5165582692164970601[387] = 0;
   out_5165582692164970601[388] = 0;
   out_5165582692164970601[389] = 0;
   out_5165582692164970601[390] = 0;
   out_5165582692164970601[391] = 0;
   out_5165582692164970601[392] = 0;
   out_5165582692164970601[393] = 0;
   out_5165582692164970601[394] = 0;
   out_5165582692164970601[395] = 0;
   out_5165582692164970601[396] = 1;
   out_5165582692164970601[397] = 0;
   out_5165582692164970601[398] = 0;
   out_5165582692164970601[399] = 0;
   out_5165582692164970601[400] = 0;
   out_5165582692164970601[401] = 0;
   out_5165582692164970601[402] = 0;
   out_5165582692164970601[403] = 0;
   out_5165582692164970601[404] = 0;
   out_5165582692164970601[405] = 0;
   out_5165582692164970601[406] = 0;
   out_5165582692164970601[407] = 0;
   out_5165582692164970601[408] = 0;
   out_5165582692164970601[409] = 0;
   out_5165582692164970601[410] = 0;
   out_5165582692164970601[411] = 0;
   out_5165582692164970601[412] = 0;
   out_5165582692164970601[413] = 0;
   out_5165582692164970601[414] = 0;
   out_5165582692164970601[415] = 0;
   out_5165582692164970601[416] = 0;
   out_5165582692164970601[417] = 0;
   out_5165582692164970601[418] = 1;
   out_5165582692164970601[419] = 0;
   out_5165582692164970601[420] = 0;
   out_5165582692164970601[421] = 0;
   out_5165582692164970601[422] = 0;
   out_5165582692164970601[423] = 0;
   out_5165582692164970601[424] = 0;
   out_5165582692164970601[425] = 0;
   out_5165582692164970601[426] = 0;
   out_5165582692164970601[427] = 0;
   out_5165582692164970601[428] = 0;
   out_5165582692164970601[429] = 0;
   out_5165582692164970601[430] = 0;
   out_5165582692164970601[431] = 0;
   out_5165582692164970601[432] = 0;
   out_5165582692164970601[433] = 0;
   out_5165582692164970601[434] = 0;
   out_5165582692164970601[435] = 0;
   out_5165582692164970601[436] = 0;
   out_5165582692164970601[437] = 0;
   out_5165582692164970601[438] = 0;
   out_5165582692164970601[439] = 0;
   out_5165582692164970601[440] = 1;
}
void h_4(double *state, double *unused, double *out_7417913370402788155) {
   out_7417913370402788155[0] = state[10] + state[13];
   out_7417913370402788155[1] = state[11] + state[14];
   out_7417913370402788155[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1136689340074395490) {
   out_1136689340074395490[0] = 0;
   out_1136689340074395490[1] = 0;
   out_1136689340074395490[2] = 0;
   out_1136689340074395490[3] = 0;
   out_1136689340074395490[4] = 0;
   out_1136689340074395490[5] = 0;
   out_1136689340074395490[6] = 0;
   out_1136689340074395490[7] = 0;
   out_1136689340074395490[8] = 0;
   out_1136689340074395490[9] = 0;
   out_1136689340074395490[10] = 1;
   out_1136689340074395490[11] = 0;
   out_1136689340074395490[12] = 0;
   out_1136689340074395490[13] = 1;
   out_1136689340074395490[14] = 0;
   out_1136689340074395490[15] = 0;
   out_1136689340074395490[16] = 0;
   out_1136689340074395490[17] = 0;
   out_1136689340074395490[18] = 0;
   out_1136689340074395490[19] = 0;
   out_1136689340074395490[20] = 0;
   out_1136689340074395490[21] = 0;
   out_1136689340074395490[22] = 0;
   out_1136689340074395490[23] = 0;
   out_1136689340074395490[24] = 0;
   out_1136689340074395490[25] = 0;
   out_1136689340074395490[26] = 0;
   out_1136689340074395490[27] = 0;
   out_1136689340074395490[28] = 0;
   out_1136689340074395490[29] = 0;
   out_1136689340074395490[30] = 0;
   out_1136689340074395490[31] = 0;
   out_1136689340074395490[32] = 0;
   out_1136689340074395490[33] = 1;
   out_1136689340074395490[34] = 0;
   out_1136689340074395490[35] = 0;
   out_1136689340074395490[36] = 1;
   out_1136689340074395490[37] = 0;
   out_1136689340074395490[38] = 0;
   out_1136689340074395490[39] = 0;
   out_1136689340074395490[40] = 0;
   out_1136689340074395490[41] = 0;
   out_1136689340074395490[42] = 0;
   out_1136689340074395490[43] = 0;
   out_1136689340074395490[44] = 0;
   out_1136689340074395490[45] = 0;
   out_1136689340074395490[46] = 0;
   out_1136689340074395490[47] = 0;
   out_1136689340074395490[48] = 0;
   out_1136689340074395490[49] = 0;
   out_1136689340074395490[50] = 0;
   out_1136689340074395490[51] = 0;
   out_1136689340074395490[52] = 0;
   out_1136689340074395490[53] = 0;
   out_1136689340074395490[54] = 0;
   out_1136689340074395490[55] = 0;
   out_1136689340074395490[56] = 1;
   out_1136689340074395490[57] = 0;
   out_1136689340074395490[58] = 0;
   out_1136689340074395490[59] = 1;
   out_1136689340074395490[60] = 0;
   out_1136689340074395490[61] = 0;
   out_1136689340074395490[62] = 0;
   out_1136689340074395490[63] = 0;
   out_1136689340074395490[64] = 0;
   out_1136689340074395490[65] = 0;
}
void h_9(double *state, double *unused, double *out_3542522809502864859) {
   out_3542522809502864859[0] = state[10];
   out_3542522809502864859[1] = state[11];
   out_3542522809502864859[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3020478396280381993) {
   out_3020478396280381993[0] = 0;
   out_3020478396280381993[1] = 0;
   out_3020478396280381993[2] = 0;
   out_3020478396280381993[3] = 0;
   out_3020478396280381993[4] = 0;
   out_3020478396280381993[5] = 0;
   out_3020478396280381993[6] = 0;
   out_3020478396280381993[7] = 0;
   out_3020478396280381993[8] = 0;
   out_3020478396280381993[9] = 0;
   out_3020478396280381993[10] = 1;
   out_3020478396280381993[11] = 0;
   out_3020478396280381993[12] = 0;
   out_3020478396280381993[13] = 0;
   out_3020478396280381993[14] = 0;
   out_3020478396280381993[15] = 0;
   out_3020478396280381993[16] = 0;
   out_3020478396280381993[17] = 0;
   out_3020478396280381993[18] = 0;
   out_3020478396280381993[19] = 0;
   out_3020478396280381993[20] = 0;
   out_3020478396280381993[21] = 0;
   out_3020478396280381993[22] = 0;
   out_3020478396280381993[23] = 0;
   out_3020478396280381993[24] = 0;
   out_3020478396280381993[25] = 0;
   out_3020478396280381993[26] = 0;
   out_3020478396280381993[27] = 0;
   out_3020478396280381993[28] = 0;
   out_3020478396280381993[29] = 0;
   out_3020478396280381993[30] = 0;
   out_3020478396280381993[31] = 0;
   out_3020478396280381993[32] = 0;
   out_3020478396280381993[33] = 1;
   out_3020478396280381993[34] = 0;
   out_3020478396280381993[35] = 0;
   out_3020478396280381993[36] = 0;
   out_3020478396280381993[37] = 0;
   out_3020478396280381993[38] = 0;
   out_3020478396280381993[39] = 0;
   out_3020478396280381993[40] = 0;
   out_3020478396280381993[41] = 0;
   out_3020478396280381993[42] = 0;
   out_3020478396280381993[43] = 0;
   out_3020478396280381993[44] = 0;
   out_3020478396280381993[45] = 0;
   out_3020478396280381993[46] = 0;
   out_3020478396280381993[47] = 0;
   out_3020478396280381993[48] = 0;
   out_3020478396280381993[49] = 0;
   out_3020478396280381993[50] = 0;
   out_3020478396280381993[51] = 0;
   out_3020478396280381993[52] = 0;
   out_3020478396280381993[53] = 0;
   out_3020478396280381993[54] = 0;
   out_3020478396280381993[55] = 0;
   out_3020478396280381993[56] = 1;
   out_3020478396280381993[57] = 0;
   out_3020478396280381993[58] = 0;
   out_3020478396280381993[59] = 0;
   out_3020478396280381993[60] = 0;
   out_3020478396280381993[61] = 0;
   out_3020478396280381993[62] = 0;
   out_3020478396280381993[63] = 0;
   out_3020478396280381993[64] = 0;
   out_3020478396280381993[65] = 0;
}
void h_10(double *state, double *unused, double *out_5170121947243021887) {
   out_5170121947243021887[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5170121947243021887[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5170121947243021887[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_733443939580960134) {
   out_733443939580960134[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_733443939580960134[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_733443939580960134[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_733443939580960134[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_733443939580960134[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_733443939580960134[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_733443939580960134[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_733443939580960134[7] = 0;
   out_733443939580960134[8] = 0;
   out_733443939580960134[9] = 0;
   out_733443939580960134[10] = 0;
   out_733443939580960134[11] = 0;
   out_733443939580960134[12] = 0;
   out_733443939580960134[13] = 0;
   out_733443939580960134[14] = 0;
   out_733443939580960134[15] = 0;
   out_733443939580960134[16] = 1;
   out_733443939580960134[17] = 0;
   out_733443939580960134[18] = 0;
   out_733443939580960134[19] = 1;
   out_733443939580960134[20] = 0;
   out_733443939580960134[21] = 0;
   out_733443939580960134[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_733443939580960134[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_733443939580960134[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_733443939580960134[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_733443939580960134[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_733443939580960134[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_733443939580960134[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_733443939580960134[29] = 0;
   out_733443939580960134[30] = 0;
   out_733443939580960134[31] = 0;
   out_733443939580960134[32] = 0;
   out_733443939580960134[33] = 0;
   out_733443939580960134[34] = 0;
   out_733443939580960134[35] = 0;
   out_733443939580960134[36] = 0;
   out_733443939580960134[37] = 0;
   out_733443939580960134[38] = 0;
   out_733443939580960134[39] = 1;
   out_733443939580960134[40] = 0;
   out_733443939580960134[41] = 0;
   out_733443939580960134[42] = 1;
   out_733443939580960134[43] = 0;
   out_733443939580960134[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_733443939580960134[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_733443939580960134[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_733443939580960134[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_733443939580960134[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_733443939580960134[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_733443939580960134[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_733443939580960134[51] = 0;
   out_733443939580960134[52] = 0;
   out_733443939580960134[53] = 0;
   out_733443939580960134[54] = 0;
   out_733443939580960134[55] = 0;
   out_733443939580960134[56] = 0;
   out_733443939580960134[57] = 0;
   out_733443939580960134[58] = 0;
   out_733443939580960134[59] = 0;
   out_733443939580960134[60] = 0;
   out_733443939580960134[61] = 0;
   out_733443939580960134[62] = 1;
   out_733443939580960134[63] = 0;
   out_733443939580960134[64] = 0;
   out_733443939580960134[65] = 1;
}
void h_12(double *state, double *unused, double *out_2346182449451327159) {
   out_2346182449451327159[0] = state[0];
   out_2346182449451327159[1] = state[1];
   out_2346182449451327159[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1757788365121989157) {
   out_1757788365121989157[0] = 1;
   out_1757788365121989157[1] = 0;
   out_1757788365121989157[2] = 0;
   out_1757788365121989157[3] = 0;
   out_1757788365121989157[4] = 0;
   out_1757788365121989157[5] = 0;
   out_1757788365121989157[6] = 0;
   out_1757788365121989157[7] = 0;
   out_1757788365121989157[8] = 0;
   out_1757788365121989157[9] = 0;
   out_1757788365121989157[10] = 0;
   out_1757788365121989157[11] = 0;
   out_1757788365121989157[12] = 0;
   out_1757788365121989157[13] = 0;
   out_1757788365121989157[14] = 0;
   out_1757788365121989157[15] = 0;
   out_1757788365121989157[16] = 0;
   out_1757788365121989157[17] = 0;
   out_1757788365121989157[18] = 0;
   out_1757788365121989157[19] = 0;
   out_1757788365121989157[20] = 0;
   out_1757788365121989157[21] = 0;
   out_1757788365121989157[22] = 0;
   out_1757788365121989157[23] = 1;
   out_1757788365121989157[24] = 0;
   out_1757788365121989157[25] = 0;
   out_1757788365121989157[26] = 0;
   out_1757788365121989157[27] = 0;
   out_1757788365121989157[28] = 0;
   out_1757788365121989157[29] = 0;
   out_1757788365121989157[30] = 0;
   out_1757788365121989157[31] = 0;
   out_1757788365121989157[32] = 0;
   out_1757788365121989157[33] = 0;
   out_1757788365121989157[34] = 0;
   out_1757788365121989157[35] = 0;
   out_1757788365121989157[36] = 0;
   out_1757788365121989157[37] = 0;
   out_1757788365121989157[38] = 0;
   out_1757788365121989157[39] = 0;
   out_1757788365121989157[40] = 0;
   out_1757788365121989157[41] = 0;
   out_1757788365121989157[42] = 0;
   out_1757788365121989157[43] = 0;
   out_1757788365121989157[44] = 0;
   out_1757788365121989157[45] = 0;
   out_1757788365121989157[46] = 1;
   out_1757788365121989157[47] = 0;
   out_1757788365121989157[48] = 0;
   out_1757788365121989157[49] = 0;
   out_1757788365121989157[50] = 0;
   out_1757788365121989157[51] = 0;
   out_1757788365121989157[52] = 0;
   out_1757788365121989157[53] = 0;
   out_1757788365121989157[54] = 0;
   out_1757788365121989157[55] = 0;
   out_1757788365121989157[56] = 0;
   out_1757788365121989157[57] = 0;
   out_1757788365121989157[58] = 0;
   out_1757788365121989157[59] = 0;
   out_1757788365121989157[60] = 0;
   out_1757788365121989157[61] = 0;
   out_1757788365121989157[62] = 0;
   out_1757788365121989157[63] = 0;
   out_1757788365121989157[64] = 0;
   out_1757788365121989157[65] = 0;
}
void h_31(double *state, double *unused, double *out_9147156794790558350) {
   out_9147156794790558350[0] = state[7];
   out_9147156794790558350[1] = state[8];
   out_9147156794790558350[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4503351397447002866) {
   out_4503351397447002866[0] = 0;
   out_4503351397447002866[1] = 0;
   out_4503351397447002866[2] = 0;
   out_4503351397447002866[3] = 0;
   out_4503351397447002866[4] = 0;
   out_4503351397447002866[5] = 0;
   out_4503351397447002866[6] = 0;
   out_4503351397447002866[7] = 1;
   out_4503351397447002866[8] = 0;
   out_4503351397447002866[9] = 0;
   out_4503351397447002866[10] = 0;
   out_4503351397447002866[11] = 0;
   out_4503351397447002866[12] = 0;
   out_4503351397447002866[13] = 0;
   out_4503351397447002866[14] = 0;
   out_4503351397447002866[15] = 0;
   out_4503351397447002866[16] = 0;
   out_4503351397447002866[17] = 0;
   out_4503351397447002866[18] = 0;
   out_4503351397447002866[19] = 0;
   out_4503351397447002866[20] = 0;
   out_4503351397447002866[21] = 0;
   out_4503351397447002866[22] = 0;
   out_4503351397447002866[23] = 0;
   out_4503351397447002866[24] = 0;
   out_4503351397447002866[25] = 0;
   out_4503351397447002866[26] = 0;
   out_4503351397447002866[27] = 0;
   out_4503351397447002866[28] = 0;
   out_4503351397447002866[29] = 0;
   out_4503351397447002866[30] = 1;
   out_4503351397447002866[31] = 0;
   out_4503351397447002866[32] = 0;
   out_4503351397447002866[33] = 0;
   out_4503351397447002866[34] = 0;
   out_4503351397447002866[35] = 0;
   out_4503351397447002866[36] = 0;
   out_4503351397447002866[37] = 0;
   out_4503351397447002866[38] = 0;
   out_4503351397447002866[39] = 0;
   out_4503351397447002866[40] = 0;
   out_4503351397447002866[41] = 0;
   out_4503351397447002866[42] = 0;
   out_4503351397447002866[43] = 0;
   out_4503351397447002866[44] = 0;
   out_4503351397447002866[45] = 0;
   out_4503351397447002866[46] = 0;
   out_4503351397447002866[47] = 0;
   out_4503351397447002866[48] = 0;
   out_4503351397447002866[49] = 0;
   out_4503351397447002866[50] = 0;
   out_4503351397447002866[51] = 0;
   out_4503351397447002866[52] = 0;
   out_4503351397447002866[53] = 1;
   out_4503351397447002866[54] = 0;
   out_4503351397447002866[55] = 0;
   out_4503351397447002866[56] = 0;
   out_4503351397447002866[57] = 0;
   out_4503351397447002866[58] = 0;
   out_4503351397447002866[59] = 0;
   out_4503351397447002866[60] = 0;
   out_4503351397447002866[61] = 0;
   out_4503351397447002866[62] = 0;
   out_4503351397447002866[63] = 0;
   out_4503351397447002866[64] = 0;
   out_4503351397447002866[65] = 0;
}
void h_32(double *state, double *unused, double *out_2517444789799649268) {
   out_2517444789799649268[0] = state[3];
   out_2517444789799649268[1] = state[4];
   out_2517444789799649268[2] = state[5];
   out_2517444789799649268[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4113705223209274332) {
   out_4113705223209274332[0] = 0;
   out_4113705223209274332[1] = 0;
   out_4113705223209274332[2] = 0;
   out_4113705223209274332[3] = 1;
   out_4113705223209274332[4] = 0;
   out_4113705223209274332[5] = 0;
   out_4113705223209274332[6] = 0;
   out_4113705223209274332[7] = 0;
   out_4113705223209274332[8] = 0;
   out_4113705223209274332[9] = 0;
   out_4113705223209274332[10] = 0;
   out_4113705223209274332[11] = 0;
   out_4113705223209274332[12] = 0;
   out_4113705223209274332[13] = 0;
   out_4113705223209274332[14] = 0;
   out_4113705223209274332[15] = 0;
   out_4113705223209274332[16] = 0;
   out_4113705223209274332[17] = 0;
   out_4113705223209274332[18] = 0;
   out_4113705223209274332[19] = 0;
   out_4113705223209274332[20] = 0;
   out_4113705223209274332[21] = 0;
   out_4113705223209274332[22] = 0;
   out_4113705223209274332[23] = 0;
   out_4113705223209274332[24] = 0;
   out_4113705223209274332[25] = 0;
   out_4113705223209274332[26] = 1;
   out_4113705223209274332[27] = 0;
   out_4113705223209274332[28] = 0;
   out_4113705223209274332[29] = 0;
   out_4113705223209274332[30] = 0;
   out_4113705223209274332[31] = 0;
   out_4113705223209274332[32] = 0;
   out_4113705223209274332[33] = 0;
   out_4113705223209274332[34] = 0;
   out_4113705223209274332[35] = 0;
   out_4113705223209274332[36] = 0;
   out_4113705223209274332[37] = 0;
   out_4113705223209274332[38] = 0;
   out_4113705223209274332[39] = 0;
   out_4113705223209274332[40] = 0;
   out_4113705223209274332[41] = 0;
   out_4113705223209274332[42] = 0;
   out_4113705223209274332[43] = 0;
   out_4113705223209274332[44] = 0;
   out_4113705223209274332[45] = 0;
   out_4113705223209274332[46] = 0;
   out_4113705223209274332[47] = 0;
   out_4113705223209274332[48] = 0;
   out_4113705223209274332[49] = 1;
   out_4113705223209274332[50] = 0;
   out_4113705223209274332[51] = 0;
   out_4113705223209274332[52] = 0;
   out_4113705223209274332[53] = 0;
   out_4113705223209274332[54] = 0;
   out_4113705223209274332[55] = 0;
   out_4113705223209274332[56] = 0;
   out_4113705223209274332[57] = 0;
   out_4113705223209274332[58] = 0;
   out_4113705223209274332[59] = 0;
   out_4113705223209274332[60] = 0;
   out_4113705223209274332[61] = 0;
   out_4113705223209274332[62] = 0;
   out_4113705223209274332[63] = 0;
   out_4113705223209274332[64] = 0;
   out_4113705223209274332[65] = 0;
   out_4113705223209274332[66] = 0;
   out_4113705223209274332[67] = 0;
   out_4113705223209274332[68] = 0;
   out_4113705223209274332[69] = 0;
   out_4113705223209274332[70] = 0;
   out_4113705223209274332[71] = 0;
   out_4113705223209274332[72] = 1;
   out_4113705223209274332[73] = 0;
   out_4113705223209274332[74] = 0;
   out_4113705223209274332[75] = 0;
   out_4113705223209274332[76] = 0;
   out_4113705223209274332[77] = 0;
   out_4113705223209274332[78] = 0;
   out_4113705223209274332[79] = 0;
   out_4113705223209274332[80] = 0;
   out_4113705223209274332[81] = 0;
   out_4113705223209274332[82] = 0;
   out_4113705223209274332[83] = 0;
   out_4113705223209274332[84] = 0;
   out_4113705223209274332[85] = 0;
   out_4113705223209274332[86] = 0;
   out_4113705223209274332[87] = 0;
}
void h_13(double *state, double *unused, double *out_8232464278499455166) {
   out_8232464278499455166[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8232464278499455166[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8232464278499455166[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2378879281699706885) {
   out_2378879281699706885[0] = 0;
   out_2378879281699706885[1] = 0;
   out_2378879281699706885[2] = 0;
   out_2378879281699706885[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2378879281699706885[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2378879281699706885[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2378879281699706885[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2378879281699706885[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2378879281699706885[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2378879281699706885[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2378879281699706885[10] = 0;
   out_2378879281699706885[11] = 0;
   out_2378879281699706885[12] = 0;
   out_2378879281699706885[13] = 0;
   out_2378879281699706885[14] = 0;
   out_2378879281699706885[15] = 0;
   out_2378879281699706885[16] = 0;
   out_2378879281699706885[17] = 0;
   out_2378879281699706885[18] = 0;
   out_2378879281699706885[19] = 0;
   out_2378879281699706885[20] = 0;
   out_2378879281699706885[21] = 0;
   out_2378879281699706885[22] = 0;
   out_2378879281699706885[23] = 0;
   out_2378879281699706885[24] = 0;
   out_2378879281699706885[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2378879281699706885[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2378879281699706885[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2378879281699706885[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2378879281699706885[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2378879281699706885[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2378879281699706885[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2378879281699706885[32] = 0;
   out_2378879281699706885[33] = 0;
   out_2378879281699706885[34] = 0;
   out_2378879281699706885[35] = 0;
   out_2378879281699706885[36] = 0;
   out_2378879281699706885[37] = 0;
   out_2378879281699706885[38] = 0;
   out_2378879281699706885[39] = 0;
   out_2378879281699706885[40] = 0;
   out_2378879281699706885[41] = 0;
   out_2378879281699706885[42] = 0;
   out_2378879281699706885[43] = 0;
   out_2378879281699706885[44] = 0;
   out_2378879281699706885[45] = 0;
   out_2378879281699706885[46] = 0;
   out_2378879281699706885[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2378879281699706885[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2378879281699706885[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2378879281699706885[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2378879281699706885[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2378879281699706885[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2378879281699706885[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2378879281699706885[54] = 0;
   out_2378879281699706885[55] = 0;
   out_2378879281699706885[56] = 0;
   out_2378879281699706885[57] = 0;
   out_2378879281699706885[58] = 0;
   out_2378879281699706885[59] = 0;
   out_2378879281699706885[60] = 0;
   out_2378879281699706885[61] = 0;
   out_2378879281699706885[62] = 0;
   out_2378879281699706885[63] = 0;
   out_2378879281699706885[64] = 0;
   out_2378879281699706885[65] = 0;
}
void h_14(double *state, double *unused, double *out_3542522809502864859) {
   out_3542522809502864859[0] = state[10];
   out_3542522809502864859[1] = state[11];
   out_3542522809502864859[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3020478396280381993) {
   out_3020478396280381993[0] = 0;
   out_3020478396280381993[1] = 0;
   out_3020478396280381993[2] = 0;
   out_3020478396280381993[3] = 0;
   out_3020478396280381993[4] = 0;
   out_3020478396280381993[5] = 0;
   out_3020478396280381993[6] = 0;
   out_3020478396280381993[7] = 0;
   out_3020478396280381993[8] = 0;
   out_3020478396280381993[9] = 0;
   out_3020478396280381993[10] = 1;
   out_3020478396280381993[11] = 0;
   out_3020478396280381993[12] = 0;
   out_3020478396280381993[13] = 0;
   out_3020478396280381993[14] = 0;
   out_3020478396280381993[15] = 0;
   out_3020478396280381993[16] = 0;
   out_3020478396280381993[17] = 0;
   out_3020478396280381993[18] = 0;
   out_3020478396280381993[19] = 0;
   out_3020478396280381993[20] = 0;
   out_3020478396280381993[21] = 0;
   out_3020478396280381993[22] = 0;
   out_3020478396280381993[23] = 0;
   out_3020478396280381993[24] = 0;
   out_3020478396280381993[25] = 0;
   out_3020478396280381993[26] = 0;
   out_3020478396280381993[27] = 0;
   out_3020478396280381993[28] = 0;
   out_3020478396280381993[29] = 0;
   out_3020478396280381993[30] = 0;
   out_3020478396280381993[31] = 0;
   out_3020478396280381993[32] = 0;
   out_3020478396280381993[33] = 1;
   out_3020478396280381993[34] = 0;
   out_3020478396280381993[35] = 0;
   out_3020478396280381993[36] = 0;
   out_3020478396280381993[37] = 0;
   out_3020478396280381993[38] = 0;
   out_3020478396280381993[39] = 0;
   out_3020478396280381993[40] = 0;
   out_3020478396280381993[41] = 0;
   out_3020478396280381993[42] = 0;
   out_3020478396280381993[43] = 0;
   out_3020478396280381993[44] = 0;
   out_3020478396280381993[45] = 0;
   out_3020478396280381993[46] = 0;
   out_3020478396280381993[47] = 0;
   out_3020478396280381993[48] = 0;
   out_3020478396280381993[49] = 0;
   out_3020478396280381993[50] = 0;
   out_3020478396280381993[51] = 0;
   out_3020478396280381993[52] = 0;
   out_3020478396280381993[53] = 0;
   out_3020478396280381993[54] = 0;
   out_3020478396280381993[55] = 0;
   out_3020478396280381993[56] = 1;
   out_3020478396280381993[57] = 0;
   out_3020478396280381993[58] = 0;
   out_3020478396280381993[59] = 0;
   out_3020478396280381993[60] = 0;
   out_3020478396280381993[61] = 0;
   out_3020478396280381993[62] = 0;
   out_3020478396280381993[63] = 0;
   out_3020478396280381993[64] = 0;
   out_3020478396280381993[65] = 0;
}
void h_33(double *state, double *unused, double *out_8436989049089448161) {
   out_8436989049089448161[0] = state[16];
   out_8436989049089448161[1] = state[17];
   out_8436989049089448161[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7653908402085860470) {
   out_7653908402085860470[0] = 0;
   out_7653908402085860470[1] = 0;
   out_7653908402085860470[2] = 0;
   out_7653908402085860470[3] = 0;
   out_7653908402085860470[4] = 0;
   out_7653908402085860470[5] = 0;
   out_7653908402085860470[6] = 0;
   out_7653908402085860470[7] = 0;
   out_7653908402085860470[8] = 0;
   out_7653908402085860470[9] = 0;
   out_7653908402085860470[10] = 0;
   out_7653908402085860470[11] = 0;
   out_7653908402085860470[12] = 0;
   out_7653908402085860470[13] = 0;
   out_7653908402085860470[14] = 0;
   out_7653908402085860470[15] = 0;
   out_7653908402085860470[16] = 1;
   out_7653908402085860470[17] = 0;
   out_7653908402085860470[18] = 0;
   out_7653908402085860470[19] = 0;
   out_7653908402085860470[20] = 0;
   out_7653908402085860470[21] = 0;
   out_7653908402085860470[22] = 0;
   out_7653908402085860470[23] = 0;
   out_7653908402085860470[24] = 0;
   out_7653908402085860470[25] = 0;
   out_7653908402085860470[26] = 0;
   out_7653908402085860470[27] = 0;
   out_7653908402085860470[28] = 0;
   out_7653908402085860470[29] = 0;
   out_7653908402085860470[30] = 0;
   out_7653908402085860470[31] = 0;
   out_7653908402085860470[32] = 0;
   out_7653908402085860470[33] = 0;
   out_7653908402085860470[34] = 0;
   out_7653908402085860470[35] = 0;
   out_7653908402085860470[36] = 0;
   out_7653908402085860470[37] = 0;
   out_7653908402085860470[38] = 0;
   out_7653908402085860470[39] = 1;
   out_7653908402085860470[40] = 0;
   out_7653908402085860470[41] = 0;
   out_7653908402085860470[42] = 0;
   out_7653908402085860470[43] = 0;
   out_7653908402085860470[44] = 0;
   out_7653908402085860470[45] = 0;
   out_7653908402085860470[46] = 0;
   out_7653908402085860470[47] = 0;
   out_7653908402085860470[48] = 0;
   out_7653908402085860470[49] = 0;
   out_7653908402085860470[50] = 0;
   out_7653908402085860470[51] = 0;
   out_7653908402085860470[52] = 0;
   out_7653908402085860470[53] = 0;
   out_7653908402085860470[54] = 0;
   out_7653908402085860470[55] = 0;
   out_7653908402085860470[56] = 0;
   out_7653908402085860470[57] = 0;
   out_7653908402085860470[58] = 0;
   out_7653908402085860470[59] = 0;
   out_7653908402085860470[60] = 0;
   out_7653908402085860470[61] = 0;
   out_7653908402085860470[62] = 1;
   out_7653908402085860470[63] = 0;
   out_7653908402085860470[64] = 0;
   out_7653908402085860470[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7025793885702551025) {
  H(in_vec, out_7025793885702551025);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8842764689132081094) {
  err_fun(nom_x, delta_x, out_8842764689132081094);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5199305465308273602) {
  inv_err_fun(nom_x, true_x, out_5199305465308273602);
}
void live_H_mod_fun(double *state, double *out_3685767440720203406) {
  H_mod_fun(state, out_3685767440720203406);
}
void live_f_fun(double *state, double dt, double *out_3828607459824926178) {
  f_fun(state,  dt, out_3828607459824926178);
}
void live_F_fun(double *state, double dt, double *out_5165582692164970601) {
  F_fun(state,  dt, out_5165582692164970601);
}
void live_h_4(double *state, double *unused, double *out_7417913370402788155) {
  h_4(state, unused, out_7417913370402788155);
}
void live_H_4(double *state, double *unused, double *out_1136689340074395490) {
  H_4(state, unused, out_1136689340074395490);
}
void live_h_9(double *state, double *unused, double *out_3542522809502864859) {
  h_9(state, unused, out_3542522809502864859);
}
void live_H_9(double *state, double *unused, double *out_3020478396280381993) {
  H_9(state, unused, out_3020478396280381993);
}
void live_h_10(double *state, double *unused, double *out_5170121947243021887) {
  h_10(state, unused, out_5170121947243021887);
}
void live_H_10(double *state, double *unused, double *out_733443939580960134) {
  H_10(state, unused, out_733443939580960134);
}
void live_h_12(double *state, double *unused, double *out_2346182449451327159) {
  h_12(state, unused, out_2346182449451327159);
}
void live_H_12(double *state, double *unused, double *out_1757788365121989157) {
  H_12(state, unused, out_1757788365121989157);
}
void live_h_31(double *state, double *unused, double *out_9147156794790558350) {
  h_31(state, unused, out_9147156794790558350);
}
void live_H_31(double *state, double *unused, double *out_4503351397447002866) {
  H_31(state, unused, out_4503351397447002866);
}
void live_h_32(double *state, double *unused, double *out_2517444789799649268) {
  h_32(state, unused, out_2517444789799649268);
}
void live_H_32(double *state, double *unused, double *out_4113705223209274332) {
  H_32(state, unused, out_4113705223209274332);
}
void live_h_13(double *state, double *unused, double *out_8232464278499455166) {
  h_13(state, unused, out_8232464278499455166);
}
void live_H_13(double *state, double *unused, double *out_2378879281699706885) {
  H_13(state, unused, out_2378879281699706885);
}
void live_h_14(double *state, double *unused, double *out_3542522809502864859) {
  h_14(state, unused, out_3542522809502864859);
}
void live_H_14(double *state, double *unused, double *out_3020478396280381993) {
  H_14(state, unused, out_3020478396280381993);
}
void live_h_33(double *state, double *unused, double *out_8436989049089448161) {
  h_33(state, unused, out_8436989049089448161);
}
void live_H_33(double *state, double *unused, double *out_7653908402085860470) {
  H_33(state, unused, out_7653908402085860470);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
